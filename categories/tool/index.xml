<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tool on tbd</title>
    <link>https://daikikohara.github.io/categories/tool/</link>
    <description>Recent content in Tool on tbd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 13 Nov 2015 13:33:33 -0800</lastBuildDate>
    
	<atom:link href="https://daikikohara.github.io/categories/tool/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Wireshark2.0のメモ</title>
      <link>https://daikikohara.github.io/blog/2015/11/13/wireshark-2.0-introduction/</link>
      <pubDate>Fri, 13 Nov 2015 13:33:33 -0800</pubDate>
      
      <guid>https://daikikohara.github.io/blog/2015/11/13/wireshark-2.0-introduction/</guid>
      <description>Wiresharkが初のメジャーアップデートということで話題になっていたのでこの紹介動画を見たのでメモです。 ちなみに2015年11月13日現在では2.0のstable版は出ていません。RC版はLinux向けのは無いので試せてないですが出たら追記すると思います。
=&amp;gt;(11/23追記)11/18にstable版が出ましたが、Mac/Windowsのみです。自分はLinux(Fedora)ユーザのため試すのはもう少し先になりそうです。
視聴メモ  Qtインターフェース採用  UIは大分変わっていた AndroidやiOSでも動くようになる、、、かもとのこと Legacyを選ぶと従来のGTKインターフェースで動く デモは全てQt版でのデモ  USBPcap  USBポート経由のキャプチャができる newって紹介されてたけど、多分新しいものではないはず。  UIの変更点(で便利だと思ったもの)  メイン画面でパケットを選択すると、左端のカラムに対応するパケットが示される カラールールがスクロールバーにも表示される  グラフ  IOグラフ - 元からあるけど右クリックメニューで何か便利になってたっぽい TCPストリームグラフ - シーケンスとかスループットとか最初に選んで変えれなかったけど、グラフ開いてからで変更ができるようになったみたい。また、AからB向きの方向を逆にするのもグラフ上でできる。  多言語対応  デフォルトはシステム設定 日本語はあった  その他  デモ用のTraceファイルは公式サイトに置いてある 2.2とか偶数がstable版らしい 現時点の最新版はRC3 2.0の公式版は18日リリースしたい。   動画を見た正直な印象はUIが多少変わっただけで対して変わってないんじゃ？って思っちゃいましたが、使ってみないと何とも言えませんね。</description>
    </item>
    
    <item>
      <title>NomadとOttoのmeetup参加メモ</title>
      <link>https://daikikohara.github.io/blog/2015/11/11/nomad_otto_features/</link>
      <pubDate>Wed, 11 Nov 2015 22:45:00 -0800</pubDate>
      
      <guid>https://daikikohara.github.io/blog/2015/11/11/nomad_otto_features/</guid>
      <description>HashiCorpのCTOであるArmon Dadgar氏によるNomadとOttoに関するmeetupの参加メモ。 またしてもかなり不完全ですが。。。こっちって技術系でもmeetupでPC開いている人が殆どいなくてメモとりづらいんですよね。
 動画は無し。スライドはこちら ステッカーは配ってませんでした  HashiCorpプロダクト全般の話
  Vagrantがあった状態で会社を作った。最初はDevOpsの会社だと思われていたがDevOpsだけじゃなくてDev寄りのツール等も作ってきた。 Vaultはオープンにするつもりで作ったわけではなかった。サポート等をする内に認証情報等を保存することが増えてきて、どうやって管理したら良いんだろうということを考えて作って社内で使っていたものをオープンソースにした。 実は最初のうちはPostgreSQLに平文で保存していた(しようとしていたかも？)。 ちなみにHashiCorpはaにアクセントがある模様。oだと思ってた^^;  Nomadの話  Nomadはクラスタ管理ツール 内部的にはConsulとSerfを使っている。 コンテナ・VM・スタンドアロンのアプリをサポートしている。  現在はコンテナはDocker、VMはQEMU/KVM、スタンドアロンはJar(Java)と静的バイナリのみ。今後拡大予定。  amplabやGoogle Researchの研究をかなり参考にした。 データセンターやクラウドサービス、リージョンなどを跨いで管理できる EvaluationしてからAllocationするといった感じのアーキテクチャを紹介(図が無いとアレですが。。。) ジョブの分散処理はロックとかではなくOptimisctic Concurrencyによるとのこと。 Digital Oceanでテストしたらしい。数百ノード使ったとか言っていた。 0.2ではService Discovery、SystemScheduler、RestartPolicies、EnhancedConstraints等を追加予定 0.3ではCron、JobQueuing、Latency-Aware Scheduling等を追加予定  Ottoの話  Vagrantでは同じVagrantファイルで全く同じものができる。ただし、昔の脆弱性等をそのままデプロすることになるし、古いOSを使うことになる。 Ottoではこの辺りは自動で解決してくれる。 vagrant upがotto devになる等の対応の話 開発者がコードのデプロイをするにはググッて出てきた情報をコピペするという無駄な作業を今でも行っていたりする。しかも例えばrailsアプリのデプロイであれば毎回同じようなことをするだけなのに。 ottoならotto infra, otto build, otto deployの3ステップで完了する。 何の設定もしなくてもコマンドを実行するだけで良い。 設定が必要な場合はAppfileに書くことができる。 Appfileの書き方の例。Appfileは独自フォーマットみたい。  以上。
とりあえずちゃんと使ってみたらまたQiita辺りにポストしようかと思います。</description>
    </item>
    
  </channel>
</rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tbd</title>
    <link>https://daikikohara.github.io/</link>
    <description>Recent content on tbd</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 12 Feb 2016 12:49:18 -0800</lastBuildDate>
    <atom:link href="https://daikikohara.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Unikernelのmeetupの視聴メモ</title>
      <link>https://daikikohara.github.io/blog/2016/02/12/unikernel-meetup/</link>
      <pubDate>Fri, 12 Feb 2016 12:49:18 -0800</pubDate>
      
      <guid>https://daikikohara.github.io/blog/2016/02/12/unikernel-meetup/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker社&lt;/a&gt;が買収した&lt;a href=&#34;http://unikernel.com/&#34;&gt;Unikernel Systems社&lt;/a&gt;が扱ってるUnikernelについて全然知らなかったので、&lt;a href=&#34;https://www.youtube.com/watch?v=qvVzlxggnFk&#34;&gt;Docker Online MeetupのUnikernelの動画&lt;/a&gt;を見たついでに、分からないところを調べられた範囲で補完しつつまとめてみました。なお、&lt;strong&gt;超基本的な内容です。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;動画だけでなく&lt;a href=&#34;http://www.slideshare.net/Docker/docker-online-meetup-31-unikernels&#34;&gt;スライド自体&lt;/a&gt;も上がってます。&lt;/p&gt;

&lt;p&gt;先に自分が理解した範囲でまとめを書くと、以下のような流れみたいです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unikernelは単一のアプリを動かすためのシンプルかつ高速なOSで色々な実装がある。&lt;/li&gt;
&lt;li&gt;でも従来のOSと違うし、各実装ごとにツールもあるしで、アプリをビルドして動かすのが大変。&lt;/li&gt;
&lt;li&gt;dockerのエコシステムに取り込んでdockerコマンドでビルド・デプロイできるようになったらいいんじゃないってことで買収した。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;従来のosの問題:37abd8c8067d32e43dab600446560196&#34;&gt;従来のOSの問題&lt;/h2&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/unikernel_meetup/traditional_approach.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; style=&#34;margin:0 auto;&#34;&gt;

&lt;div class=&#39;citation&#39;&gt;&lt;cite&gt;&lt;a href=&#34;http://www.slideshare.net/Docker/docker-online-meetup-31-unikernels&#34;&gt;http://www.slideshare.net/Docker/docker-online-meetup-31-unikernels&lt;/a&gt;より引用&lt;/cite&gt;&lt;/div&gt;

&lt;p&gt;現在使われているLinux等のOSは膨大なコードを持ち、アプリケーションに必要でない部分もシステムに組み込む必要がある。
そのためアプリケーションがSystemAPIと結びついてしまい、以下のような問題がある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OSのディストリビューションやバージョンの制約を受ける&lt;/li&gt;
&lt;li&gt;アプリケーションのアドホックな設定が必要になる&lt;/li&gt;
&lt;li&gt;ファイアウォール等、システム全体の設定が必要になる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これは従来のOSの目的が、複数のユーザが複数のアプリを同時に動かすことだからだ。
しかしマイクロサービス等、現在のアーキテクチャでは一つのアプリのみを動かすだけという使い方も考えられるため、従来のOSの目的と合わなくなってきている。&lt;/p&gt;

&lt;p&gt;また、ポータブル性の欠如という問題もある。
従来のシステムでビルドは環境に依存するが、実際は複数のターゲットを扱わないといけない。
例えば複数のターゲットを持つクラウドサービスやスマートフォンといったもの。またJavaScriptもブラウザにより異なるし、IoTでもデバイス毎に異なる。
これらは複数のターゲットごとにプログラムせねばならず、コードの再利用は難しい。&lt;/p&gt;

&lt;h2 id=&#34;unikernelとは何か:37abd8c8067d32e43dab600446560196&#34;&gt;Unikernelとは何か&lt;/h2&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/unikernel_meetup/unikernel.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; style=&#34;margin:0 auto;&#34;&gt;

&lt;div class=&#39;citation&#39;&gt;&lt;cite&gt;&lt;a href=&#34;http://www.slideshare.net/Docker/docker-online-meetup-31-unikernels&#34;&gt;http://www.slideshare.net/Docker/docker-online-meetup-31-unikernels&lt;/a&gt;より引用&lt;/cite&gt;&lt;/div&gt;

&lt;p&gt;これらの問題を解決するために&lt;a href=&#34;https://en.wikipedia.org/wiki/Unikernel&#34;&gt;Unikernel&lt;/a&gt;が役に立つ。
Unikernelには以下のような特徴がある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OSのコンポーネントをライブラリの集合として利用できるようにしている。&lt;/li&gt;
&lt;li&gt;ビルド時にアプリケーションのコードをシステムライブラリとリンクし、アプリケーションが必要とするライブラリだけを使うことが可能。&lt;/li&gt;
&lt;li&gt;単一のプロセス、単一のアドレススペースのイメージが作成される。&lt;/li&gt;
&lt;li&gt;アプリケーションは同じコードベースを使い、ビルド時にシステムライブラリを切り替えるだけでターゲットの変更が可能。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なお、Unikernelのコンセプトは新しいものではなく、1990年代から存在していた。&lt;/p&gt;

&lt;h2 id=&#34;利点:37abd8c8067d32e43dab600446560196&#34;&gt;利点&lt;/h2&gt;

&lt;p&gt;前述の特徴から以下のような利点がある。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;必要なライブラリのみをスタティックにリンクできるため、シンプルにできる。&lt;/li&gt;
&lt;li&gt;TCP接続が確立される間にブートできるくらい高速。&lt;/li&gt;
&lt;li&gt;レイヤーが少ないので低レイテンシおよび、パフォーマンスの予測が容易。&lt;/li&gt;
&lt;li&gt;リソースをあまり使わない。例えばUnikernelの実装の一つであるMirageOSのアプリは10MB以下のメモリしか使わない。MirageOSのDNSサーバは200KBしかない。&lt;/li&gt;
&lt;li&gt;マイクロサービスやImmutable Infrastructure等の新しいデザインパターンの構築が容易になる。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;unikernelを使う場合の開発サイクル:37abd8c8067d32e43dab600446560196&#34;&gt;Unikernelを使う場合の開発サイクル&lt;/h2&gt;

&lt;p&gt;以下のような流れで開発していくことができ従来の方法と大きくは変わらない。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;アプリのビルドは普通に行うが、OSのコンポーネントに対応するライブラリを使ってリンクすることと、従来のホストOSとの依存性を排除するという点が従来と異なる。&lt;/li&gt;
&lt;li&gt;テストや測定は通常通りに行うことが可能。&lt;/li&gt;
&lt;li&gt;Unikernelとしてビルドする&lt;/li&gt;
&lt;li&gt;デプロイする&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;利用するツールもCIシステム、gdb、プロファイラ、linterやdtraceといった従来のものが利用可能。
カーネル空間・ユーザ空間というものがなく全てがユーザ空間で動くので、通常のツールが利用できる。&lt;/p&gt;

&lt;h2 id=&#34;unikernelの実装:37abd8c8067d32e43dab600446560196&#34;&gt;Unikernelの実装&lt;/h2&gt;

&lt;p&gt;Unikernelには&lt;a href=&#34;http://unikernel.org/projects/&#34;&gt;多くの実装&lt;/a&gt;がある。
それぞれトレードオフがある。
例えばMirageOSとHaLVMはまっさらな状態からライブラリを書き直している。
一方Rumprunは長年使われてきたNetBSDのコンポーネントを再利用している。&lt;/p&gt;

&lt;p&gt;(ちなみに&lt;a href=&#34;https://github.com/mirage/mirage&#34;&gt;MirageOS&lt;/a&gt;はOCaml、&lt;a href=&#34;https://github.com/GaloisInc/HaLVM&#34;&gt;HaLVM&lt;/a&gt;はHaskell、&lt;a href=&#34;https://github.com/rumpkernel/rumprun&#34;&gt;Rumprun&lt;/a&gt;はCでそれぞれ書かれている)&lt;/p&gt;

&lt;p&gt;このように現在のアーキテクチャに適したUnikernelだが、導入時の障壁として以下のようなものが考えられる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;デベロッパーはUnikernelを使うために様々なツールを学ぶ必要がある。&lt;/li&gt;
&lt;li&gt;複数のプロジェクトがあるということは複数のツールチェーンがあるということ&lt;/li&gt;
&lt;li&gt;デプロイが単純には行かないということでもある&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらを解決するために、DockerはUnikernelと手を取った。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unikernelはより良いツールが必要でDockerには様々なツールとエコシステムがある。&lt;/li&gt;
&lt;li&gt;UnikernelをDockerのエコシステムに組み込むことでこれらを利用可能にする。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;デモ:37abd8c8067d32e43dab600446560196&#34;&gt;デモ&lt;/h2&gt;

&lt;p&gt;デモは&lt;a href=&#34;https://github.com/Unikernel-Systems/DockerConEU2015-demo&#34;&gt;このレポジトリ&lt;/a&gt;のもので、Nginx・PHP・MySQLをUnikernelのアプリとしてdocker buildで立ち上げるというもの。
以下は話してた内容や画面上を見た範囲でのメモ。実際に動かしたらQiitaにでも投稿します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unikernelはdockerのツールチェーンを使って普通のLinuxコンテナと同じように動かすことができる。&lt;/li&gt;
&lt;li&gt;それぞれのUnikernelがKVMの仮想マシンとして動く。&lt;/li&gt;
&lt;li&gt;各OSイメージは2-6MB程度で必要な機能のみが入った状態になっている。

&lt;ul&gt;
&lt;li&gt;実際、nginxのイメージが2.1MBくらいになってた。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;1秒以下で起動する。

&lt;ul&gt;
&lt;li&gt;実際それくらいだった。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;nginxのみ外から繋がり、他はVM間でしかつながらないようになっている。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上。&lt;/p&gt;

&lt;p&gt;Unikernelの考えは確かに現在のアーキテクチャに適しているように思いました。
利点がとても大きいように思えるので、dockerツールに組み込まれて透過的に扱えるようになれば大流行するんじゃないでしょうか。
なお、Unikernel関連の議論は&lt;a href=&#34;https://devel.unikernel.org/&#34;&gt;こちら&lt;/a&gt;で行われているようです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android Dev Summit2015の視聴メモ</title>
      <link>https://daikikohara.github.io/blog/2015/11/23/android-dev-summit-2015/</link>
      <pubDate>Mon, 23 Nov 2015 12:49:18 -0800</pubDate>
      
      <guid>https://daikikohara.github.io/blog/2015/11/23/android-dev-summit-2015/</guid>
      <description>

&lt;p&gt;2015年11月23,24日にマウンテンビューで行われた&lt;a href=&#34;https://androiddevsummit.withgoogle.com/&#34;&gt;Android Dev Summit&lt;/a&gt;の視聴メモです。
参加ではなくライブストリーミングを聞きながらメモった内容です。両日とも私用のため午前中のセッションのみです。また、Keynote以外はかなり簡単な紹介なので気になる内容があれば直接動画を見てもらえばと思います(動画ページへのリンクも貼ってます)。
個別動画へのリンク(2日目分でまだアップされてないもの)やまとめ・レポートサイトへのリンク等はあとで追記予定です。
レコーディング動画は&lt;a href=&#34;https://www.youtube.com/playlist?list=PLWz5rJ2EKKc_Tt7q77qwyKRgytF1RzRx8&#34;&gt;こちら&lt;/a&gt;に随時アップされますが見直して追記等はしない予定です。
ちなみに個人的には1日目のKeynoteと2日目の最初のセッション(What&amp;rsquo;s new in Android Studio)と2日目の2番目のセッション(データバインディングの話。初出はI/Oだったらしいですが)は見た方が良いかなと思います。&lt;/p&gt;

&lt;h1 id=&#34;初日:7fbc869a0cbce8433b744831670a7f7b&#34;&gt;初日&lt;/h1&gt;

&lt;h2 id=&#34;keynote:7fbc869a0cbce8433b744831670a7f7b&#34;&gt;Keynote&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;9:05am - 9:45am&lt;/li&gt;
&lt;li&gt;スピーカ: Dave Burke &amp;amp; Stephanie Saad Cuthbertson(Andoridのエンジニアチーム)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=oBV2U4w89_A&#34;&gt;動画&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/android_dev_summit/AndroidStudio2.0-1.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;div class=&#39;citation&#39;&gt;&lt;cite&gt;&lt;a href=&#34;https://androiddevsummit.withgoogle.com/stream&#34;&gt;https://androiddevsummit.withgoogle.com/stream&lt;/a&gt;より引用&lt;/cite&gt;&lt;/div&gt;

&lt;h3 id=&#34;導入的な話-by-dave:7fbc869a0cbce8433b744831670a7f7b&#34;&gt;導入的な話(by Dave)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;以前はPalmOS、WindowsMobile、Symbianとか色々なOSがあって、それぞれのOS用にアプリを提供するのがツラかった。そこからOSSのプラットフォームを作ろうという話になってAndroidが生まれた。&lt;/li&gt;
&lt;li&gt;Andoridでは&lt;a href=&#34;http://static.googleusercontent.com/media/source.android.com/en//compatibility/android-cdd.pdf&#34;&gt;CompatibilityDefinitionDocument&lt;/a&gt;があって機種間で互換性を保てるようになっている。&lt;/li&gt;
&lt;li&gt;現在のGoogle検索は50%以上がモバイルから行われている。&lt;/li&gt;
&lt;li&gt;1.4ビリオンのAndroidアクティブユーザがいる。&lt;/li&gt;
&lt;li&gt;CupCake, Donut, Eclair, Froyo, Gingerbread, Honeycomb, IceCreamSandwich, JellyBean, KitKat, Lollipop, Marshmallowをそれぞれ振り返りそれぞれで何ができるようになったかの紹介。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;androidstudio2-0リリース-by-stephanie:7fbc869a0cbce8433b744831670a7f7b&#34;&gt;AndroidStudio2.0リリース(by Stephanie)&lt;/h3&gt;

&lt;p&gt;※既にリリースされているので関連記事読んだ方が良いと思われます。まだ日本語の記事はないっぽいけど英語だと&lt;a href=&#34;http://techcrunch.com/2015/11/23/android-studio-2-0-with-improved-android-emulator-and-instant-run/&#34;&gt;TechCrunch&lt;/a&gt;に記事がありました。&lt;a href=&#34;http://android-developers.blogspot.com/2015/11/android-studio-20-preview.html&#34;&gt;公式ブログ&lt;/a&gt;でも紹介されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;プレビュー版のダウンロードは&lt;a href=&#34;http://tools.android.com/download/studio/builds/2-0-preview&#34;&gt;ここ&lt;/a&gt;から&lt;/li&gt;
&lt;li&gt;スピードへのフォーカス

&lt;ul&gt;
&lt;li&gt;ビルドスピードが2倍以上早くなる。インクリメンタルビルドだと数秒で終わる。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;エミュレータが早くない、安定しないという意見があったので改善した。&lt;/li&gt;
&lt;li&gt;エミュレータはWindowをドラッグしてリサイズできるようになる。&lt;/li&gt;
&lt;li&gt;カメラやバッテリーステータス等をエミュレートできるようになる。&lt;/li&gt;
&lt;li&gt;Google Play Serviceが含まれるようになる。&lt;/li&gt;
&lt;li&gt;GPUプロファイラ(Early Preview)

&lt;ul&gt;
&lt;li&gt;グラフィックインテンシブなアプリ向け。&lt;/li&gt;
&lt;li&gt;GPUのデバッグができる。&lt;/li&gt;
&lt;li&gt;GPUストリームをレコードしてリプレイできる。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;出たばかりのIntelliJ 15と統合されている&lt;/li&gt;
&lt;li&gt;テストサポートの強化

&lt;ul&gt;
&lt;li&gt;UnitTestとAndroidTestを両方同時に走らせることができる？(あんまり詳しくないのでよく分からず)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;GoogleSearchとのDeepLinkの生成やリアルタイムでちゃんとGoogleにIndexされているか確認できるようになる(若干理解が怪しい)&lt;/li&gt;
&lt;li&gt;まだEclipseを使ってる人がいるけど早く移行して欲しい。&lt;/li&gt;
&lt;li&gt;InstantRun(インクリメンタルビルドって言ってたやつ？)の紹介

&lt;ul&gt;
&lt;li&gt;リソースやソースを変更したらすぐに反映される&lt;/li&gt;
&lt;li&gt;1,2秒で反映される&lt;/li&gt;
&lt;li&gt;デモ(あとでもっと詳しいデモがあった)&lt;/li&gt;
&lt;li&gt;Instant Runは全てのエミュレータ、実デバイス、IceCreamSandwithAPI15までの全OSで動く&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;新バージョン使ったライブコーディング-by-dave:7fbc869a0cbce8433b744831670a7f7b&#34;&gt;新バージョン使ったライブコーディング(by Dave)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;ライブコーディングしながら実デバイスにデプロイ&lt;/li&gt;
&lt;li&gt;ホットスワップ(Instant Run)

&lt;ul&gt;
&lt;li&gt;リソースとコードが一瞬でデプロイできる例(最初かなりトラブってたｗ)&lt;/li&gt;
&lt;li&gt;チェスゲームを例に、ビューを3Dにしたり、コマのサイズの変更をライブで行って一瞬で変わっていた。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;DevSummitの今後のセッションの説明をして終了&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;android-application-architecture:7fbc869a0cbce8433b744831670a7f7b&#34;&gt;Android application architecture&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;スピーカ: Yigit Boyar &amp;amp; Adam Powell&lt;/li&gt;
&lt;li&gt;9:45am - 10:30am&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=BlkJzgjzL0c&#34;&gt;動画&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/android_dev_summit/Architecture-1.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;div class=&#39;citation&#39;&gt;&lt;cite&gt;&lt;a href=&#34;https://androiddevsummit.withgoogle.com/stream&#34;&gt;https://androiddevsummit.withgoogle.com/stream&lt;/a&gt;より引用&lt;/cite&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Google IOでのトークの特別編で元のはYoutubeにあるみたいなことを言っていたが元の動画は見つからず。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;内容&lt;/strong&gt;&lt;br&gt;
アーキテクチャをどうするかをテーマにしたベストプラクティスの話がメインで、様々なトピックに分けて話を進めていった。
ポスト(?)にコメントをできるようなサンプルアプリを例に話をしていた。オフラインでつけたコメントがオンラインになったときにどう反映されるべきか、どう読み込まれるべきか等の内容を、上記画像にあるような図とコードスニペットを交えて説明。バックグランドプロセスの設計の話、UXの話、APIデザインの話、メモリ管理、パフォーマンスの話等、それぞれ概要レベルだけど幅広いトピックをカバー。
最後にはサンプルアプリ上でのデモも行った。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;respecting-user-attention-notification-best-practices:7fbc869a0cbce8433b744831670a7f7b&#34;&gt;Respecting User Attention: Notification Best Practices&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;11:00am - 11:45am&lt;/li&gt;
&lt;li&gt;スピーカ: Chris Wren(MediaLabのPhDで現在はAndroid System UIチームの人)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=5bJTSsk4sLU&#34;&gt;動画&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/android_dev_summit/Notification-1.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;div class=&#39;citation&#39;&gt;&lt;cite&gt;&lt;a href=&#34;https://androiddevsummit.withgoogle.com/stream&#34;&gt;https://androiddevsummit.withgoogle.com/stream&lt;/a&gt;より引用&lt;/cite&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;内容&lt;/strong&gt;&lt;br&gt;
Notification(通知)のベストプラクティスをキャプチャのトピックに分けてユーザ体験の観点から紹介していく話。ライブコーディングではないがコードスニペットを使ってコードの紹介もしていった。コードの全体は&lt;a href=&#34;https://android.googlesource.com/platform/packages/experimental/+/master/NotificationShowcase/src/com/android/example/notificationshowcase/NotificationService.java&#34;&gt;こちら&lt;/a&gt;にある。話としては通知をどうするべきかがメインだったので、例えば通知は誰からの電話なら通知する等を細かくできるようにするべきとか、何をロックスクリーンに出すべきか、通知はユーザがアクションを取れるものする、Dismissできない通知の扱いをどうするべきか等だった。個人的にはGlobal Dismiss(ある端末で通知をDismissしたら他の端末でもDismissされる)の話が出てて、全アプリで実装してもらいたいと思った。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;keep-it-secret-keep-it-safe:7fbc869a0cbce8433b744831670a7f7b&#34;&gt;Keep it Secret, Keep it Safe&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;11:45am - 12:30pm&lt;/li&gt;
&lt;li&gt;スピーカ: Chad Brubaker(AndroidのSecurityチームの人)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fcWVV0Hafuk&#34;&gt;動画&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/android_dev_summit/Security-1.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;div class=&#39;citation&#39;&gt;&lt;cite&gt;&lt;a href=&#34;https://androiddevsummit.withgoogle.com/stream&#34;&gt;https://androiddevsummit.withgoogle.com/stream&lt;/a&gt;より引用&lt;/cite&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;内容&lt;/strong&gt;&lt;br&gt;
TLSをなぜか使うべきかといった基本的な話から実際にどう使うかといった話、Marshmallowで追加されたStrictMode等の新機能の話、バッドノウハウやセキュリティテストツール(&lt;a href=&#34;https://github.com/google/nogotofail&#34;&gt;nogotofail&lt;/a&gt;)の話等、セキュリティに関連する幅広い話題を扱っていた。

&lt;ul&gt;
&lt;li&gt;概要的な話だと、カフェなどで簡単に繋がるけど危ないという話、センシティブな情報のやり取りを行わない場合でも安全じゃない通信を使った場合は攻撃(例えばhttpサイトにアクセスしてXSSのようなことをされたりマルウェアに感染する等といった意味合いだと思われる)をされる可能性はあるといった話。&lt;/li&gt;
&lt;li&gt;HTTPはHTTPSに変更するべしとかJavaSocketならSSLSocketにしようみたいな話をスニペット交えて説明。&lt;/li&gt;
&lt;li&gt;サーバサイドはサービス使うなら殆ど対応してるよって話。&lt;/li&gt;
&lt;li&gt;マシュマロでサポートされたStrictMode等の話を注意点を交えて説明。&lt;/li&gt;
&lt;li&gt;TLSをチェックする際の注意点や設定等での間違えやすいポイント。&lt;/li&gt;
&lt;li&gt;正しいように見えてダメなコード等を紹介。&lt;/li&gt;
&lt;li&gt;セキュリティ関連のコードはよく分からずにコピペして使わない&lt;/li&gt;
&lt;li&gt;nogotofailという設定ミス等をテストするためのツールの紹介&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2日目:7fbc869a0cbce8433b744831670a7f7b&#34;&gt;2日目&lt;/h1&gt;

&lt;h2 id=&#34;what-s-new-in-android-studio:7fbc869a0cbce8433b744831670a7f7b&#34;&gt;What&amp;rsquo;s new in Android Studio&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;9:05am - 9:45am&lt;/li&gt;
&lt;li&gt;スピーカ: Jamal Eason, Tor Norbye &amp;amp; Xavier Ducrohet&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=fs0eira2pRY&#34;&gt;動画&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/android_dev_summit/whats-new-in-android-studio.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;div class=&#39;citation&#39;&gt;&lt;cite&gt;&lt;a href=&#34;https://androiddevsummit.withgoogle.com/stream&#34;&gt;https://androiddevsummit.withgoogle.com/stream&lt;/a&gt;より引用&lt;/cite&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;内容&lt;/strong&gt; &lt;br&gt;
IDE Enhancement、ビルドシステム、Emulatorの大きく3つのトピックに関する話。IDE EnhancementではGPU Monitor, ネットワークモニター, App Template, テーマエディタ, Vector Asset Studio等、I/O&amp;rsquo;15以降に追加された新機能の紹介があった。ビルドシステムではdxが4パラで動くようになった等のdxの改善の話やProGuardの改善の話、dx/Shrinkerのベンチマークの話、不要な解像度のアセットを入れずにパッケージングする等の話があり、その後Instant Runの内部的な話とデモがあった。デモではHot Swap(リソースやメソッド内の変更等)やCold Swap(メソッド自体の追加等アプリを終了して再実行が必要になるもの)、データバインディング(後のセッション参照)の話などをしながら進めていた。Emulatorの話ではPerformanceとUsabilityに分けて話をしていた。PerformanceはCPU,GPU,IOのパフォーマンスが上がったいう話。Usabilityではキーボード・ショートカットの追加、GoogleMapでGPSが使えたり場所のエミュレーションもできるデモ、ネットワークも2G,3G等やローミング・SIMが無いケース等様々なエミュレーションができるという紹介、バッテリ残量のエミュレーション、指紋認証のエミュレーション、リサイズやローテートのデモ、PCからファイルをドラッグ・アンド・ドロップするデモ、SMSを送信するデモ等、様々な機能を紹介していた。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data-binding-write-apps-faster:7fbc869a0cbce8433b744831670a7f7b&#34;&gt;Data Binding &amp;ndash; write apps faster&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;9:45am - 10:30am&lt;/li&gt;
&lt;li&gt;スピーカ: George Mount &amp;amp; Yigit Boyar&lt;/li&gt;
&lt;li&gt;[動画]()(まだ)&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/android_dev_summit/data-binding.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;div class=&#39;citation&#39;&gt;&lt;cite&gt;&lt;a href=&#34;https://androiddevsummit.withgoogle.com/stream&#34;&gt;https://androiddevsummit.withgoogle.com/stream&lt;/a&gt;より引用&lt;/cite&gt;&lt;/div&gt;

&lt;p&gt;これはKeynoteに次いで大きい発表だった気がするので見た方が良いかも((追記)と思ったらI/Oで既に発表された内容だったらしいｗ情弱ですいませんｗ)。Viewやリソースの書き方が大分変わるという話。例えばリソースに&lt;code&gt;@+id/productImage&lt;/code&gt;みたいな書き方に変わって、ソースのオブジェクトから&lt;code&gt;@{prod.image}&lt;/code&gt;みたいなことができるようになる。&lt;code&gt;@{条件 ? VISIBLE : GONE}&lt;/code&gt;みたいにロジックを入れることもできる(複雑なロジックは入れるべきではないとのこと。できるできないじゃなくて多分責務とか可読性の観点から)。
また、上記キャプチャの通りfindViewByIdが不要になるということで、特定のインターフェースを実装したクラスを使ってfindViewById不要な操作ができるようになる(理解怪しいかも)。リソースでonClick使ったメソッド指定も色々なものが追加されて、onLongClickとかonTextChangeといったコールバックが利用できるみたい。この辺を実現するためのアノテーション等含めたソースの書き方やベストプラクティスも紹介していたのでこの動画は見るなり変更を追うなりした方が良さそう。&lt;/p&gt;

&lt;h2 id=&#34;the-android-build-system:7fbc869a0cbce8433b744831670a7f7b&#34;&gt;The Android Build System&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;11:00am - 11:45am&lt;/li&gt;
&lt;li&gt;スピーカ: Xav Ducrochet, Jerome Dochez &amp;amp; Michal Bendowski&lt;/li&gt;
&lt;li&gt;[動画]()(まだ)&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/android_dev_summit/build-system.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;div class=&#39;citation&#39;&gt;&lt;cite&gt;&lt;a href=&#34;https://androiddevsummit.withgoogle.com/stream&#34;&gt;https://androiddevsummit.withgoogle.com/stream&lt;/a&gt;より引用&lt;/cite&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;内容&lt;/strong&gt;&lt;br&gt;
デーモンモードを使おう、デーモンにメモリを十分割り当てよう、SSDを使おう等といったビルド時のパフォーマンスのチェックリストを紹介(上記キャプチャ)。
その他、単体テスト時等環境ごとのビルド設定の話、NDKやGradleプラグインの拡張の話やテストAPIの話等、話題が多岐に渡っていた。
javacしてからdxまでのフローの話とかGradleの仕組みの話にも触れ意見等がある場合は&lt;a href=&#34;https://github.com/google/android-gradle-dsl&#34;&gt;GitHubのレポジトリ&lt;/a&gt;を見て欲しいみたいな話をしていた。
InstantRunの内部動作の触りの話もしていた。クラスは一度しかロードされず、新しいクラスローダにより書き換えた箇所のみ反映されるらしい。新たに反映されたものは新しいインスタンスが生成された場合に反映されるので、Singletonを使っている場合等は実行されなかったりするので注意が必要みたい。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;android-testing:7fbc869a0cbce8433b744831670a7f7b&#34;&gt;Android Testing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;11:45am - 12:30pm&lt;/li&gt;
&lt;li&gt;スピーカ: Stephan Linzner, Jose Alcérreca &amp;amp; Jan-Felix Schmakeit&lt;/li&gt;
&lt;li&gt;[動画]()(まだ)&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/android_dev_summit/test.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;div class=&#39;citation&#39;&gt;&lt;cite&gt;&lt;a href=&#34;https://androiddevsummit.withgoogle.com/stream&#34;&gt;https://androiddevsummit.withgoogle.com/stream&lt;/a&gt;より引用&lt;/cite&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;内容&lt;/strong&gt;&lt;br&gt;
Androidのテストの自動化に関するトピックを上記のキャプチャにあるように単体テストからUIテスト、パフォーマンスのテストといったレイヤに分けて網羅的に扱う話。例はノートを取るアプリだったけど、あんまりアプリを例にした説明は多くなかった。単体テストでは外部要因を排除してテストできるようにするべきとか、例えばMockを使う等、それをどのように実現するかと言った話やTDDの話等をしていた。
UIテストの話はEspressoの紹介がメインで書き方やデモや注意点等に触れていた。あとは&lt;a href=&#34;https://developers.google.com/cloud-test-lab/&#34;&gt;Cloud Test Lab&lt;/a&gt;等を使って複数デバイスでもテストできるようになっているみたいな話もしていた。
パフォーマンステストの話では1コミットでパフォーマンスが大幅に低下することもあったりするし、それを毎回手動でテストをするのは大変なので、パフォーマンステストも自動化することの重要性を述べていた。Gradleのプラグインでテスト単位でネットワークやグラフィックのパフォーマンスを取得できるらしく、アノテーションを使ったそれらのテストの書き方の紹介などをしていた。
最後に&lt;a href=&#34;https://www.code-labs.io/codelabs/android-testing/#0&#34;&gt;Android Testing Codelab&lt;/a&gt;や&lt;a href=&#34;https://www.code-labs.io/codelabs/android-perf-testing/#0&#34;&gt;同パフォーマンステストのCodelab&lt;/a&gt;、&lt;a href=&#34;https://github.com/googlesamples/android-testing&#34;&gt;テストのサンプル&lt;/a&gt;等の各種リソースの紹介を行っていた。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Wireshark2.0のメモ</title>
      <link>https://daikikohara.github.io/blog/2015/11/13/wireshark-2.0-introduction/</link>
      <pubDate>Fri, 13 Nov 2015 13:33:33 -0800</pubDate>
      
      <guid>https://daikikohara.github.io/blog/2015/11/13/wireshark-2.0-introduction/</guid>
      <description>

&lt;p&gt;Wiresharkが初のメジャーアップデートということで話題になっていたので&lt;a href=&#34;https://www.youtube.com/watch?v=rLfYuO6pdVA&#34;&gt;この紹介動画&lt;/a&gt;を見たのでメモです。
ちなみに2015年11月13日現在では2.0のstable版は出ていません。RC版はLinux向けのは無いので試せてないですが出たら追記すると思います。&lt;/p&gt;

&lt;p&gt;=&amp;gt;(11/23追記)11/18にstable版が出ましたが、Mac/Windowsのみです。自分はLinux(Fedora)ユーザのため試すのはもう少し先になりそうです。&lt;/p&gt;

&lt;h2 id=&#34;視聴メモ:cfa8031cb234e004936926f39e281c0c&#34;&gt;視聴メモ&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Qtインターフェース採用

&lt;ul&gt;
&lt;li&gt;UIは大分変わっていた&lt;/li&gt;
&lt;li&gt;AndroidやiOSでも動くようになる、、、かもとのこと&lt;/li&gt;
&lt;li&gt;Legacyを選ぶと従来のGTKインターフェースで動く&lt;/li&gt;
&lt;li&gt;デモは全てQt版でのデモ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;USBPcap

&lt;ul&gt;
&lt;li&gt;USBポート経由のキャプチャができる&lt;/li&gt;
&lt;li&gt;newって紹介されてたけど、多分新しいものではないはず。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;UIの変更点(で便利だと思ったもの)

&lt;ul&gt;
&lt;li&gt;メイン画面でパケットを選択すると、左端のカラムに対応するパケットが示される&lt;/li&gt;
&lt;li&gt;カラールールがスクロールバーにも表示される&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;グラフ

&lt;ul&gt;
&lt;li&gt;IOグラフ - 元からあるけど右クリックメニューで何か便利になってたっぽい&lt;/li&gt;
&lt;li&gt;TCPストリームグラフ - シーケンスとかスループットとか最初に選んで変えれなかったけど、グラフ開いてからで変更ができるようになったみたい。また、AからB向きの方向を逆にするのもグラフ上でできる。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;多言語対応

&lt;ul&gt;
&lt;li&gt;デフォルトはシステム設定&lt;/li&gt;
&lt;li&gt;日本語はあった&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;その他

&lt;ul&gt;
&lt;li&gt;デモ用のTraceファイルは公式サイトに置いてある&lt;/li&gt;
&lt;li&gt;2.2とか偶数がstable版らしい&lt;/li&gt;
&lt;li&gt;現時点の最新版はRC3&lt;/li&gt;
&lt;li&gt;2.0の公式版は18日リリースしたい。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;動画を見た正直な印象はUIが多少変わっただけで対して変わってないんじゃ？って思っちゃいましたが、使ってみないと何とも言えませんね。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NomadとOttoのmeetup参加メモ</title>
      <link>https://daikikohara.github.io/blog/2015/11/11/nomad_otto_features/</link>
      <pubDate>Wed, 11 Nov 2015 22:45:00 -0800</pubDate>
      
      <guid>https://daikikohara.github.io/blog/2015/11/11/nomad_otto_features/</guid>
      <description>

&lt;p&gt;HashiCorpのCTOである&lt;a href=&#34;https://twitter.com/armon/&#34;&gt;Armon Dadgar氏&lt;/a&gt;によるNomadとOttoに関する&lt;a href=&#34;http://www.meetup.com/Bay-Area-Infracoders/events/226244541/&#34;&gt;meetup&lt;/a&gt;の参加メモ。
またしてもかなり不完全ですが。。。こっちって技術系でもmeetupでPC開いている人が殆どいなくてメモとりづらいんですよね。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;動画は無し。スライドは&lt;a href=&#34;https://speakerdeck.com/armon/introduction-to-nomad-and-otto&#34;&gt;こちら&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ステッカーは配ってませんでした&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;hashicorpプロダクト全般の話-br:f9c7a68959a321c64f6fb4b201e4ed3c&#34;&gt;HashiCorpプロダクト全般の話&lt;br&gt;&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Vagrantがあった状態で会社を作った。最初はDevOpsの会社だと思われていたがDevOpsだけじゃなくてDev寄りのツール等も作ってきた。&lt;/li&gt;
&lt;li&gt;Vaultはオープンにするつもりで作ったわけではなかった。サポート等をする内に認証情報等を保存することが増えてきて、どうやって管理したら良いんだろうということを考えて作って社内で使っていたものをオープンソースにした。
実は最初のうちはPostgreSQLに平文で保存していた(しようとしていたかも？)。&lt;/li&gt;
&lt;li&gt;ちなみにHashiCorpはaにアクセントがある模様。oだと思ってた^^;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;nomadの話:f9c7a68959a321c64f6fb4b201e4ed3c&#34;&gt;Nomadの話&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Nomadはクラスタ管理ツール&lt;/li&gt;
&lt;li&gt;内部的にはConsulとSerfを使っている。&lt;/li&gt;
&lt;li&gt;コンテナ・VM・スタンドアロンのアプリをサポートしている。

&lt;ul&gt;
&lt;li&gt;現在はコンテナはDocker、VMはQEMU/KVM、スタンドアロンはJar(Java)と静的バイナリのみ。今後拡大予定。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;amplabやGoogle Researchの研究をかなり参考にした。&lt;/li&gt;
&lt;li&gt;データセンターやクラウドサービス、リージョンなどを跨いで管理できる&lt;/li&gt;
&lt;li&gt;EvaluationしてからAllocationするといった感じのアーキテクチャを紹介(図が無いとアレですが。。。)&lt;/li&gt;
&lt;li&gt;ジョブの分散処理はロックとかではなくOptimisctic Concurrencyによるとのこと。&lt;/li&gt;
&lt;li&gt;Digital Oceanでテストしたらしい。数百ノード使ったとか言っていた。&lt;/li&gt;
&lt;li&gt;0.2ではService Discovery、SystemScheduler、RestartPolicies、EnhancedConstraints等を追加予定&lt;/li&gt;
&lt;li&gt;0.3ではCron、JobQueuing、Latency-Aware Scheduling等を追加予定&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ottoの話:f9c7a68959a321c64f6fb4b201e4ed3c&#34;&gt;Ottoの話&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Vagrantでは同じVagrantファイルで全く同じものができる。ただし、昔の脆弱性等をそのままデプロすることになるし、古いOSを使うことになる。
Ottoではこの辺りは自動で解決してくれる。&lt;/li&gt;
&lt;li&gt;vagrant upがotto devになる等の対応の話&lt;/li&gt;
&lt;li&gt;開発者がコードのデプロイをするにはググッて出てきた情報をコピペするという無駄な作業を今でも行っていたりする。しかも例えばrailsアプリのデプロイであれば毎回同じようなことをするだけなのに。&lt;/li&gt;
&lt;li&gt;ottoならotto infra, otto build, otto deployの3ステップで完了する。&lt;/li&gt;
&lt;li&gt;何の設定もしなくてもコマンドを実行するだけで良い。&lt;/li&gt;
&lt;li&gt;設定が必要な場合はAppfileに書くことができる。&lt;/li&gt;
&lt;li&gt;Appfileの書き方の例。Appfileは独自フォーマットみたい。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上。&lt;br&gt;
とりあえずちゃんと使ってみたらまたQiita辺りにポストしようかと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>米国内で興味のある技術系カンファレンスの一覧(随時更新)</title>
      <link>https://daikikohara.github.io/us-conference/</link>
      <pubDate>Thu, 29 Oct 2015 15:11:12 -0700</pubDate>
      
      <guid>https://daikikohara.github.io/us-conference/</guid>
      <description>

&lt;p&gt;個人的に興味があるものかつ米国内メインの技術系カンファレンスのまとめです。
未来分(更新日から見て)のみです。
本ページは自動生成していてjsonも&lt;a href=&#34;https://daikikohara.github.io/data/conference.json&#34;&gt;ここ&lt;/a&gt;にあります。&lt;/p&gt;

&lt;p&gt;一覧が欲しくなって勢いで作りました。
登録と一覧のビューもあるので後で追記するかも。
随時更新予定ですが、こーゆーのって冷めるときは一瞬なので放置プレイになる可能性もあり得ます。&lt;/p&gt;

&lt;h1 id=&#34;us:1b735cbd4117890b113da764670ea978&#34;&gt;US&lt;/h1&gt;

&lt;h2 id=&#34;2016-1:1b735cbd4117890b113da764670ea978&#34;&gt;2016 / 1&lt;/h2&gt;

&lt;h3 id=&#34;usenix-enigma:1b735cbd4117890b113da764670ea978&#34;&gt;USENIX Enigma&lt;/h3&gt;

&lt;p&gt;2016年が初開催のセキュリティ系のカンファレス&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/1/25 - 2016/1/27&lt;/li&gt;
&lt;li&gt;場所: San Francisco, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;https://www.usenix.org/conference/enigma2016&#34;&gt;https://www.usenix.org/conference/enigma2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2016-3:1b735cbd4117890b113da764670ea978&#34;&gt;2016 / 3&lt;/h2&gt;

&lt;h3 id=&#34;geek-girl-tech-conference:1b735cbd4117890b113da764670ea978&#34;&gt;Geek Girl Tech Conference&lt;/h3&gt;

&lt;p&gt;女性技術者中心のカンファレンス。発表者が女性なだけであって男性も参加できるようだけど多分浮くと思われる。Bay Areaの他にも何箇所かで開催されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/3/5 - 2016/3/5&lt;/li&gt;
&lt;li&gt;場所: Bay Area, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://geekgirltechcon.com/&#34;&gt;http://geekgirltechcon.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;droidcon:1b735cbd4117890b113da764670ea978&#34;&gt;Droidcon&lt;/h3&gt;

&lt;p&gt;Android関連のカンファレンス。他の国・地域でも開催&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/3/17 - 2016/3/18&lt;/li&gt;
&lt;li&gt;場所: San Francisco, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://sf.droidcon.com/&#34;&gt;http://sf.droidcon.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2016-4:1b735cbd4117890b113da764670ea978&#34;&gt;2016 / 4&lt;/h2&gt;

&lt;h3 id=&#34;gpu-technology-conference:1b735cbd4117890b113da764670ea978&#34;&gt;GPU Technology Conference&lt;/h3&gt;

&lt;p&gt;GPU関連技術のカンファレンス。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/4/4 - 2016/4/7&lt;/li&gt;
&lt;li&gt;場所: San Jose, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://www.gputechconf.com/&#34;&gt;http://www.gputechconf.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;robouniverse:1b735cbd4117890b113da764670ea978&#34;&gt;RoboUniverse&lt;/h3&gt;

&lt;p&gt;ロボティクスのカンファレス(カンファレスというより展示会の模様)。NY以外でも行われている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/4/11 - 2016/4/12&lt;/li&gt;
&lt;li&gt;場所: New York City, NY&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://www.robouniverse.com/&#34;&gt;http://www.robouniverse.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;openstack-summit:1b735cbd4117890b113da764670ea978&#34;&gt;OpenStack Summit&lt;/h3&gt;

&lt;p&gt;OpenStackのカンファレンス。東京とか他の国でも行われる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/4/25 - 2016/4/29&lt;/li&gt;
&lt;li&gt;場所: Austin, TX&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;https://www.openstack.org/summit/&#34;&gt;https://www.openstack.org/summit/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2016-5:1b735cbd4117890b113da764670ea978&#34;&gt;2016 / 5&lt;/h2&gt;

&lt;h3 id=&#34;interop:1b735cbd4117890b113da764670ea978&#34;&gt;Interop&lt;/h3&gt;

&lt;p&gt;ネットワーク系がメインのカンファレンス。東京でも行われている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/5/2 - 2016/5/6&lt;/li&gt;
&lt;li&gt;場所: Las Vegas, NV&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://www.interop.com/&#34;&gt;http://www.interop.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ad-tech-los-angeles:1b735cbd4117890b113da764670ea978&#34;&gt;ad:tech(Los Angeles)&lt;/h3&gt;

&lt;p&gt;アドテク系のカンファレンス。世界各国で行われる。アメリカだとLAとNY。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/5/11 - 2016/5/12&lt;/li&gt;
&lt;li&gt;場所: Los Angeles, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://www.ad-tech.com/la/&#34;&gt;http://www.ad-tech.com/la/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;oscon:1b735cbd4117890b113da764670ea978&#34;&gt;OSCON&lt;/h3&gt;

&lt;p&gt;O&amp;rsquo;Reilly主催の技術系全般を扱うカンファレンス。ヨーロッパでも開催される。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/5/16 - 2016/5/19&lt;/li&gt;
&lt;li&gt;場所: Austin, TX&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://conferences.oreilly.com/oscon/open-source&#34;&gt;http://conferences.oreilly.com/oscon/open-source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;glue-conference:1b735cbd4117890b113da764670ea978&#34;&gt;Glue Conference&lt;/h3&gt;

&lt;p&gt;Cloud, DevOps, Mobile API, BigData等の最新のトレンドに関するカンファレンス&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/5/25 - 2016/5/26&lt;/li&gt;
&lt;li&gt;場所: Broom Field, CO&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://gluecon.com/&#34;&gt;http://gluecon.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2016-6:1b735cbd4117890b113da764670ea978&#34;&gt;2016 / 6&lt;/h2&gt;

&lt;h3 id=&#34;spark-summit:1b735cbd4117890b113da764670ea978&#34;&gt;Spark Summit&lt;/h3&gt;

&lt;p&gt;Apach Sparkに関するカンファレンス。他の国でも開催される。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/6/6 - 2016/6/8&lt;/li&gt;
&lt;li&gt;場所: San Francisco, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;https://spark-summit.org/&#34;&gt;https://spark-summit.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;qcon-new-york:1b735cbd4117890b113da764670ea978&#34;&gt;QCon(New York)&lt;/h3&gt;

&lt;p&gt;InfoQ主催のカンファレンス。世界各地で開催&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/6/13 - 2016/6/17&lt;/li&gt;
&lt;li&gt;場所: New York, NY&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;https://qconnewyork.com/&#34;&gt;https://qconnewyork.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;velocity-santa-clara:1b735cbd4117890b113da764670ea978&#34;&gt;Velocity(Santa Clara)&lt;/h3&gt;

&lt;p&gt;O&amp;rsquo;Reilly主催のカンファレンス。Webのオペレーションやパフォーマンス、最適化がメインテーマ。DevOps的な内容も扱う。世界各地で開催。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/6/21 - 2016/6/23&lt;/li&gt;
&lt;li&gt;場所: Santa Clara, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://velocityconf.com/&#34;&gt;http://velocityconf.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;sigmod:1b735cbd4117890b113da764670ea978&#34;&gt;SIGMOD&lt;/h3&gt;

&lt;p&gt;データ管理およびデータベースを扱う学会のカンファレンス。年1回世界のどこかで行われるが2016年はSFで開催。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/6/26 - 2016/7/1&lt;/li&gt;
&lt;li&gt;場所: San Francisco, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://sigmod2016.org/&#34;&gt;http://sigmod2016.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hadoop-summit:1b735cbd4117890b113da764670ea978&#34;&gt;Hadoop Summit&lt;/h3&gt;

&lt;p&gt;Hadoopの公式カンファレンス。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/6/28 - 2016/6/30&lt;/li&gt;
&lt;li&gt;場所: San Jose, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://2016.hadoopsummit.org/&#34;&gt;http://2016.hadoopsummit.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2016-8:1b735cbd4117890b113da764670ea978&#34;&gt;2016 / 8&lt;/h2&gt;

&lt;h3 id=&#34;vmworld:1b735cbd4117890b113da764670ea978&#34;&gt;VMworld&lt;/h3&gt;

&lt;p&gt;VMwareの公式カンファレンス。VMWare関連の公式発表が多数行われる。買収されたけど2016年の開催も決定している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/8/28 - 2016/9/1&lt;/li&gt;
&lt;li&gt;場所: Las Vegas, NV&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;https://www.vmworld.com/en/us/index.html&#34;&gt;https://www.vmworld.com/en/us/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2016-9:1b735cbd4117890b113da764670ea978&#34;&gt;2016 / 9&lt;/h2&gt;

&lt;h3 id=&#34;velocity-new-york:1b735cbd4117890b113da764670ea978&#34;&gt;Velocity(New York)&lt;/h3&gt;

&lt;p&gt;O&amp;rsquo;Reilly主催のカンファレンス。Webのオペレーションやパフォーマンス、最適化がメインテーマ。DevOps的な内容も扱う。世界各地で開催。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/9/20 - 2016/9/22&lt;/li&gt;
&lt;li&gt;場所: New York, NY&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://velocityconf.com/&#34;&gt;http://velocityconf.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;aws-re-invent:1b735cbd4117890b113da764670ea978&#34;&gt;AWS re:Invent&lt;/h3&gt;

&lt;p&gt;AWSの公式カンファレンス。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2016/11/28 - 2016/12/2&lt;/li&gt;
&lt;li&gt;場所: Las Vegas, NV&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;https://reinvent.awsevents.com/&#34;&gt;https://reinvent.awsevents.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;未定:1b735cbd4117890b113da764670ea978&#34;&gt;未定&lt;/h2&gt;

&lt;h3 id=&#34;coreos-fest:1b735cbd4117890b113da764670ea978&#34;&gt;CoreOS Fest&lt;/h3&gt;

&lt;p&gt;CoreOSのオフィシャルカンファレンス。2015年は5月に開催。2016年は未定&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: San Francisco&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;https://coreos.com/fest/&#34;&gt;https://coreos.com/fest/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;google-io:1b735cbd4117890b113da764670ea978&#34;&gt;Google IO&lt;/h3&gt;

&lt;p&gt;Googleの公式カンファレンス。2015年は5月に開催。毎年AndroidやGCP等の様々な最新情報が発表される。日本人の参加者も多数。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: San Francisco, CA&lt;/li&gt;
&lt;li&gt;URL: 未定&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;devnation:1b735cbd4117890b113da764670ea978&#34;&gt;DevNation&lt;/h3&gt;

&lt;p&gt;OSSに関するカンファレンス。2015年は6月に開催。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: Boston, MA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://www.devnation.org/&#34;&gt;http://www.devnation.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;couchbase-connect:1b735cbd4117890b113da764670ea978&#34;&gt;Couchbase Connect&lt;/h3&gt;

&lt;p&gt;Couchbaseの公式カンファレンス。Couchbaseに限らずNoSQL全般(にも限らず？)の幅広い内容の発表が行われる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: 未定&lt;/li&gt;
&lt;li&gt;URL: 未定&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;linuxcon:1b735cbd4117890b113da764670ea978&#34;&gt;LinuxCon&lt;/h3&gt;

&lt;p&gt;Linux関連のカンファレンス。世界各国で行われる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: 未定&lt;/li&gt;
&lt;li&gt;URL: 未定&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;java-one-oracle-open-world:1b735cbd4117890b113da764670ea978&#34;&gt;Java One / Oracle Open World&lt;/h3&gt;

&lt;p&gt;Oracleの公式カンファレンス。いつも同日開催なのでまとめてます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: San Francisco, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;https://www.oracle.com/openworld/index.html&#34;&gt;https://www.oracle.com/openworld/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ad-tech-new-york:1b735cbd4117890b113da764670ea978&#34;&gt;ad:tech(New York)&lt;/h3&gt;

&lt;p&gt;アドテク系のカンファレンス。世界各国で行われる。アメリカだとLAとNY。2015年は11月に開催&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: New York, NY&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://www.ad-tech.com/ny/&#34;&gt;http://www.ad-tech.com/ny/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;blackhat:1b735cbd4117890b113da764670ea978&#34;&gt;blackhat&lt;/h3&gt;

&lt;p&gt;セキュリティ系のカンファレンス。世界各国で行われる。2015年はアメリカでは8月開催。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: Las Vegas, NV&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;https://www.blackhat.com/&#34;&gt;https://www.blackhat.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;goto-conference:1b735cbd4117890b113da764670ea978&#34;&gt;goto conference&lt;/h3&gt;

&lt;p&gt;世界各国で行われているカンファレンス。エンタープライズ系が中心と思われる。アメリカは5月開催だけど日程は未定&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: Chicago, IL&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://gotocon.com/&#34;&gt;http://gotocon.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;gartner-itxpo:1b735cbd4117890b113da764670ea978&#34;&gt;Gartner ITXpo&lt;/h3&gt;

&lt;p&gt;Gartner主催のカンファレンス。世界各国で行われる。エンタープライズとかビジネス寄り。アメリカでは2015年は5月に行われた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: Orlando, FL&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://www.gartner.com/us/symposium&#34;&gt;http://www.gartner.com/us/symposium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;span:1b735cbd4117890b113da764670ea978&#34;&gt;SPAN&lt;/h3&gt;

&lt;p&gt;Google主催のデザイン系のカンファレンス。ロンドンでも行われるらしい。2015年は10月に開催&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: New York, NY&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;https://design.google.com/span-nyc/&#34;&gt;https://design.google.com/span-nyc/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;scale:1b735cbd4117890b113da764670ea978&#34;&gt;@Scale&lt;/h3&gt;

&lt;p&gt;スケールするシステムを開発するための技術に関するカンファレンス。2015年は9月開催だった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: San Jose, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://www.atscaleconference.com/&#34;&gt;http://www.atscaleconference.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;strange-loop:1b735cbd4117890b113da764670ea978&#34;&gt;Strange Loop&lt;/h3&gt;

&lt;p&gt;新しい技術全般に関するカンファレンス。言語やアーキテクチャ、DB、セキュリティ等内容は多岐にわたる。2015年は9月に開催&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: St. Louis, MO&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://www.thestrangeloop.com/&#34;&gt;http://www.thestrangeloop.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;perform:1b735cbd4117890b113da764670ea978&#34;&gt;Perform&lt;/h3&gt;

&lt;p&gt;パフォーマンス管理ツールを作っているdynatrace主催のカンファレンス。webとかパフォーマンスの話がメイン。ビジネス系の話も多い印象。2015年は10月に開催。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: Orlando, FL&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://www.dynatrace.com/en/perform.html&#34;&gt;http://www.dynatrace.com/en/perform.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ricon:1b735cbd4117890b113da764670ea978&#34;&gt;Ricon&lt;/h3&gt;

&lt;p&gt;Riak作ってるBasho主催のカンファレンス。分散処理システムに関する話題がメイン。2015年は11月に開催&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: San Francisco, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://ricon.io/&#34;&gt;http://ricon.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;all-things-open:1b735cbd4117890b113da764670ea978&#34;&gt;All Things Open&lt;/h3&gt;

&lt;p&gt;オープン系技術に関するカンファレンス。2015年は10月に開催&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: RALEIGH, NC&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://allthingsopen.org/&#34;&gt;http://allthingsopen.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;devops-enterprise-summit:1b735cbd4117890b113da764670ea978&#34;&gt;DevOps Enterprise Summit&lt;/h3&gt;

&lt;p&gt;DevOps系のカンファレンス。2015年は10月に開催&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: RALEIGH, NC&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://devopsenterprise.io/&#34;&gt;http://devopsenterprise.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;gdg-devfest:1b735cbd4117890b113da764670ea978&#34;&gt;GDG DevFest&lt;/h3&gt;

&lt;p&gt;Google Deveoper Groupのコミュニティイベント。世界各地でいろんな日に開催される。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: Mountain View, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;https://developers.google.com/events/devfest/&#34;&gt;https://developers.google.com/events/devfest/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;graph-connect:1b735cbd4117890b113da764670ea978&#34;&gt;Graph Connect&lt;/h3&gt;

&lt;p&gt;グラフとかデータとかグラフDBに関するカンファレンス。2015年は10月に開催&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: San Francisco, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://graphconnect.com/&#34;&gt;http://graphconnect.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;code-conf:1b735cbd4117890b113da764670ea978&#34;&gt;Code Conf&lt;/h3&gt;

&lt;p&gt;GitHub主催のソフトウェアコミュニティの成長のためのカンファレンス。2015年は6月に開催。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: Nashville, TN&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://codeconf.com/&#34;&gt;http://codeconf.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hashiconf:1b735cbd4117890b113da764670ea978&#34;&gt;HashiConf&lt;/h3&gt;

&lt;p&gt;HashiCorp製品のカンファレンス。2015年は9月に開催された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: Portland, OR&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;https://hashiconf.com/&#34;&gt;https://hashiconf.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;gophercon:1b735cbd4117890b113da764670ea978&#34;&gt;Gophercon&lt;/h3&gt;

&lt;p&gt;Golangのカンファレンス。2015年は7月に開催された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: Denver, CO&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://www.gophercon.com/&#34;&gt;http://www.gophercon.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;dockercon:1b735cbd4117890b113da764670ea978&#34;&gt;DockerCon&lt;/h3&gt;

&lt;p&gt;Dockerのカンファレンス。2015年は6月に開催。ヨーロッパでも開催される。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: San Francisco, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://2015.dockercon.com/&#34;&gt;http://2015.dockercon.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;devopsday:1b735cbd4117890b113da764670ea978&#34;&gt;devopsday&lt;/h3&gt;

&lt;p&gt;DevOps系のカンファレンス。2015年は11月に開催&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: Mountain View, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://www.devopsdays.org/&#34;&gt;http://www.devopsdays.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;node-js-interactive:1b735cbd4117890b113da764670ea978&#34;&gt;node.js Interactive&lt;/h3&gt;

&lt;p&gt;node.jsのカンファレス。2015年は12月開催だった&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: Portland, OR&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;http://events.linuxfoundation.org/events/node-interactive&#34;&gt;http://events.linuxfoundation.org/events/node-interactive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ubiquity:1b735cbd4117890b113da764670ea978&#34;&gt;UBIQUITY&lt;/h3&gt;

&lt;p&gt;IoTとかユビキタスコンピューティングに関するカンファレス。Google主催。2016年は1月に開催。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;日時: 未定&lt;/li&gt;
&lt;li&gt;場所: San Francisco, CA&lt;/li&gt;
&lt;li&gt;URL: &lt;a href=&#34;https://ubiquity.withgoogle.com/&#34;&gt;https://ubiquity.withgoogle.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Twitter Flight視聴メモ</title>
      <link>https://daikikohara.github.io/blog/2015/10/22/twitter-flight-2015/</link>
      <pubDate>Thu, 22 Oct 2015 00:27:02 -0700</pubDate>
      
      <guid>https://daikikohara.github.io/blog/2015/10/22/twitter-flight-2015/</guid>
      <description>

&lt;p&gt;2015年10月21日にサンフランシスコで行われた&lt;a href=&#34;https://twitterflight.com/&#34;&gt;Flight&lt;/a&gt;の視聴メモです。
ライブストリーミングが流れてたメインホールのみです。例によってかなりいい加減です。そして最初の方はどこでライブストリーミングが見れるのか分からず逃しました。
てかTechCrunchのページでしか流してなくてオフィシャルサイトにリンクが無いという、情弱には厳しい配信でした。。。
ちなみにキーノートセッションの話はオフィシャルの&lt;a href=&#34;https://blog.twitter.com/2015/welcome-to-flight-2015&#34;&gt;このページ&lt;/a&gt;が網羅的にまとまっています。
動画やスライドはまだ公開されてないみたいですが、公式サイトのトップにすぐ上げるみたいなことが書かれてるのですぐにどこかに上がるんじゃないかと思います。&lt;/p&gt;

&lt;h2 id=&#34;キーノート-途中から:13b100812254a41a415038807a1df3b8&#34;&gt;キーノート(途中から)&lt;/h2&gt;

&lt;p&gt;多分メインの話は&lt;a href=&#34;https://get.fabric.io/&#34;&gt;Fabric&lt;/a&gt;のアップデート。&lt;br&gt;
ちなみにFabricとはiOS/Android向けにクラッシュレポートや広告等の様々な機能を提供するモバイルプラットフォーム。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Twitterの特徴とかの紹介&lt;/li&gt;
&lt;li&gt;一部で騒がれていた&lt;a href=&#34;https://blog.twitter.com/2015/introducing-twitter-polls&#34;&gt;投票機能&lt;/a&gt;を誰でも使えるようになった&lt;/li&gt;
&lt;li&gt;Fabricとそのエコシステムの新機能の話

&lt;ul&gt;
&lt;li&gt;Fabricはリリースから1年で225,000のdeveloperを獲得&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://try.crashlytics.com/&#34;&gt;Crashlytics&lt;/a&gt;は1.4BillionのAndroidデバイス上にインストールされているらしい。Unityをサポートするようなことを言っていた。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://answers.io/&#34;&gt;Answers&lt;/a&gt;では&lt;a href=&#34;http://venturebeat.com/2015/10/21/twitter-answers-adds-audience-insights-a-deeper-look-at-app-users/&#34;&gt;Audience Insights&lt;/a&gt;で誰が使っているかの追跡がしやすくなった。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mopub.com/&#34;&gt;MoPub&lt;/a&gt;の紹介&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://venturebeat.com/2015/10/21/twitter-launches-a-tweet-composer-to-show-tweet-previews-inside-other-apps/&#34;&gt;Tweet Composer&lt;/a&gt;の紹介&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fabric.io/kits/android/stripe&#34;&gt;Stripe&lt;/a&gt;やaws等、新規に追加された&lt;a href=&#34;https://fabric.io/blog/introducing-eight-new-sdks-on-fabric&#34;&gt;8つのSDK&lt;/a&gt;の紹介。&lt;br&gt;
Stripeと&lt;a href=&#34;https://fastlane.tools/&#34;&gt;fastlane&lt;/a&gt;は代表者がそれぞれを話をしていた。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Embeded Tweetの話(あとのセッションで詳しい話があったので省略)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gnip.com/&#34;&gt;GNIP&lt;/a&gt;を使ってカスタマーサポートを行う例。これもあとで出てきたので省略するが、ここではTargetの事例ビデオやHiltonの事例ビデオが流れた。

&lt;ul&gt;
&lt;li&gt;こんな&lt;a href=&#34;https://twitter.app.box.com/customer-service-on-twitter&#34;&gt;カスタマーサービスのドキュメント&lt;/a&gt;のリンクも貼ってた。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://furni.xyz/&#34;&gt;Furni&lt;/a&gt;というFabricを使った模範的なアプリの紹介。githubにソースもある。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;a-week-in-the-life-of-a-fabric-developer-by-brian-swift-and-hemal-shah:13b100812254a41a415038807a1df3b8&#34;&gt;A Week in the Life of a Fabric Developer by Brian Swift and Hemal Shah&lt;/h2&gt;

&lt;p&gt;Fabricチームの二人が&lt;a href=&#34;https://github.com/twitterdev/cannonball-android&#34;&gt;Cannonball&lt;/a&gt;というFabricを使って作られたデモアプリのリリースを通してFabricを使った開発の1週間がどのようなものかを紹介する内容。
(ちなみにCannonballとはEmojiでPoemを書くサイトらしいが、poemは詩じゃなくて素敵な出来事とかそーゆー意味だと思われる。)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;月曜はFeature vs Fix、火曜はFeedback等、テーマに基づいて進めていく。&lt;/li&gt;
&lt;li&gt;例えば月曜は、新しいことに取り掛かる前に現状のものがstableかを確認する。FabricのコンポーネントであるCrashlyticsやAnswersを使うと全体のステータスがダッシュボードで一望できるしフォーカスすべきクラッシュも分かる。&lt;/li&gt;
&lt;li&gt;同様に火曜・水曜とFabricのコンポーネントを使ってどう進めていくかの紹介。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;growing-and-monetizing-your-app-using-twitter-by-john-egan:13b100812254a41a415038807a1df3b8&#34;&gt;Growing and Monetizing Your App Using Twitter by John Egan&lt;/h2&gt;

&lt;p&gt;MoPubのディレクタであるJohnがパネリストと広告・マネタイズに関する話をする。
パネリストは&lt;a href=&#34;http://asherv.com/threes&#34;&gt;Threes&lt;/a&gt;の人とRedditの人と&lt;a href=&#34;http://www.glu.com&#34;&gt;glu&lt;/a&gt;の人。
広告のターゲティングとかを考えた最適化の話。あんまり興味なかったので省略。&lt;del&gt;Redditの人が美人だった。&lt;/del&gt;&lt;/p&gt;

&lt;h2 id=&#34;twitter上でカスタマーサービスを行うための話-公式サイト上の表記はsecret-session:13b100812254a41a415038807a1df3b8&#34;&gt;Twitter上でカスタマーサービスを行うための話(公式サイト上の表記はSecret Session)&lt;/h2&gt;

&lt;p&gt;Twitter上でカスタマーサービスを行うための話。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;満足度の向上が見込めることやコールセンター等と比べて低コストで実現できること、利益にも影響があること等を数字を交えて紹介。&lt;/li&gt;
&lt;li&gt;全世界で使われていることやリーチのしやすさなど、Twitterのメリットを紹介。&lt;/li&gt;
&lt;li&gt;Spotifyの事例紹介

&lt;ul&gt;
&lt;li&gt;メンションも無しに不満をツイートした人を発見してやり取りをした例&lt;/li&gt;
&lt;li&gt;SpotifyからSoundcloudを使い始めたという人を見つけてやり取りした例&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;カスタマーサービスのためにDMを改善した話

&lt;ul&gt;
&lt;li&gt;140文字以上送れるようにした&lt;/li&gt;
&lt;li&gt;設定によってはフォローの状態に関わらず送れるようにした(知らんかった)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;対応のステップ

&lt;ul&gt;
&lt;li&gt;Get Tweets - メンションされたツイートや関連ツイートを検索して探す。&lt;/li&gt;
&lt;li&gt;Triage/Prioritize - 対応すべきツイートを決める。&lt;/li&gt;
&lt;li&gt;Respond - リプライする。ダイレクトメッセージを送る。参考になるメディアファイルを送る等。&lt;/li&gt;
&lt;li&gt;Measure - 効果を測る。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;キーノートでも出てきた&lt;a href=&#34;https://gnip.com/&#34;&gt;GNIP&lt;/a&gt;の話。(キーノートの話と混ざってます)

&lt;ul&gt;
&lt;li&gt;従来のRealTimeとHistoryAPIの他に&lt;a href=&#34;https://blog.twitter.com/2015/gnip-insights-apis&#34;&gt;InsightAPI&lt;/a&gt;が追加された。&lt;/li&gt;
&lt;li&gt;InsightAPIはハッシュタグのクリックやリツイート等の挙動を追跡するためのEngagementAPIとオーディエンスのより詳細な情報を収集するためのAudienceAPIからなる。&lt;/li&gt;
&lt;li&gt;例えば、自社製品のツイートを発見しても発言者が客か分からないけど、自社のサービスにツイッターでログインして貰う等して紐付ければ分かるようになるみたいな話。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;embeddedツイートの話-公式サイトの表記はsecret-session:13b100812254a41a415038807a1df3b8&#34;&gt;Embeddedツイートの話(公式サイトの表記はSecret Session)&lt;/h2&gt;

&lt;p&gt;サイトやアプリにツイートをEmbedするのが簡単・便利になったみたいな話。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Twitterでいろんなストーリーが共有されている。ストーリーはTwitterから始まる、みたいな導入話。&lt;/li&gt;
&lt;li&gt;ツイートをembedするためにツイートのURLをコピーする必要があるので面倒だったけどもっと賢くできるようになった。&lt;/li&gt;
&lt;li&gt;コレクションというものが導入されて、ツイートされるとその関連ツイートがOrganizeされて一つのCollectionIDが振られてそれを使ってPublish(サイトやアプリにembedすることだと思われる)できるみたいな概念の話。&lt;/li&gt;
&lt;li&gt;具体的には以下3つ紹介されてたけど違いがイマイチ分からなかったｗ

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tweetdeck.twitter.com/&#34;&gt;TweetDeck&lt;/a&gt;で既存のビューにカラムを追加してそこにツイートをドラッグして追加していき、そのカラム単位でembedできる。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://curator.twitter.com/&#34;&gt;Curator&lt;/a&gt;を使うと関連ツイートのまとめができ、そこからクリックやドラッグアンドドロップで必要なツイートのみ選択してwebサイトやアプリにembedできる。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://publish.twitter.com/&#34;&gt;Publish&lt;/a&gt;を使うとembeddedツイートの管理とかができる。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;発表者が変わってembedするためのコードはこれだけ的なデモ。embed後にWebのUIみたいなので紐付いている情報を更新してもちゃんとembedした側に反映されるみたい。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;電話番号でサインアップするためのdigitsの話-公式サイトの表記はsecret-session:13b100812254a41a415038807a1df3b8&#34;&gt;電話番号でサインアップするためのDigitsの話(公式サイトの表記はSecret Session)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://digits.com/&#34;&gt;Digits&lt;/a&gt;というemailやFacebookConnect等の代わりに電話番号で認証する仕組みとSDKの話。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;電話番号を持ってる人の数の紹介して電話番号は誰でも持っているみたいな導入から始まる。&lt;/li&gt;
&lt;li&gt;Digitsを使う理由

&lt;ul&gt;
&lt;li&gt;電話番号は誰でも持っている。&lt;/li&gt;
&lt;li&gt;コンバージョンレート(が何を指してるのかちゃんと理解できなかったけどサインアップ画面が出てサインアップした人の割合だったと思う)が85%。Facebookコネクトは75%、Emailは65%らしい。&lt;/li&gt;
&lt;li&gt;使いやすい。&lt;br&gt;
スマホ版のPeriscopeにDigitsを使ってサインアップ、ログインするデモ&lt;br&gt;
SMSが届いて通知領域に表示されている確認コードをそのまま入力して登録完了。&lt;/li&gt;
&lt;li&gt;voiceサポート等の新機能の追加等を行っていて追加料金無しで使える&lt;/li&gt;
&lt;li&gt;コストが安いらしい。普通に電話番号認証しようとすると0.11ドル/Verification(どこから出てきた数字か不明)かかるけどDigitsならタダ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;数行の追加で対応できるというコードの紹介。カスタマイズするのも数行。&lt;/li&gt;
&lt;li&gt;(次の人の話だったけど)ロシアとアゼルバイジャンと台湾はDigitsのログインが凄く多いらしい。ロシアはemail30%、Digits70%くらいだった。&lt;/li&gt;
&lt;li&gt;facebookに情報を預けるのが不安でfacebookでログインする人は減っているみたいなことを言っていた。&lt;/li&gt;
&lt;li&gt;ログイン時間がemailよりも早いみたいなことを言っていた。(登録までのフローの話だったかも？)&lt;/li&gt;
&lt;li&gt;フレンドファインダーもある。開発者側のメリットだけじゃなく、ユーザも友達で誰が使っているか分かる。&lt;/li&gt;
&lt;li&gt;2nd factor認証に使ったりみたいな話。&lt;/li&gt;
&lt;li&gt;その他、planchat(多分&lt;a href=&#34;https://itunes.apple.com/us/app/planchat-painless-planning/id1005882133&#34;&gt;これ&lt;/a&gt;)がemailとfacebookからDigitsベースに変えた話とか&lt;a href=&#34;https://www.calvinapp.com/&#34;&gt;calvin&lt;/a&gt;とか&lt;a href=&#34;https://vine.co/&#34;&gt;vine&lt;/a&gt;とかの例とか。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;up-periscope-by-kayvon-beykpour-and-sara-haider:13b100812254a41a415038807a1df3b8&#34;&gt;Up Periscope by Kayvon Beykpour and Sara Haider&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.periscope.tv/&#34;&gt;Periscope&lt;/a&gt;の話。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Twitterと同様のコンセプトで今起きていることをライブビデオで実現するというところから始まった。&lt;/li&gt;
&lt;li&gt;去年リリースで今年の3月時点で10Mアカウントを達成。&lt;/li&gt;
&lt;li&gt;どんなコンテンツが共有されているかの話。時事的なのとかコラボ動画みたいのとか。目新しい感じではなかった。&lt;/li&gt;
&lt;li&gt;On AirウィジェットというTwitterボタンみたいなのもある。Liveになったら表示がLiveになる。&lt;/li&gt;
&lt;li&gt;Liveデモで未リリースの機能紹介。3つくらい紹介してたけどよく分からず。。。多分過去動画の人気の位置が分かる、マップでライブだけじゃなくて過去のも出る、テレポートボタン(これは何だかホントに分からず)。&lt;/li&gt;
&lt;li&gt;技術紹介

&lt;ul&gt;
&lt;li&gt;エンジニアリングツールとスタックの紹介。バックエンドはGo、ストリーミングは&lt;a href=&#34;http://www.wowza.com/&#34;&gt;WOWZA&lt;/a&gt;、その他&lt;a href=&#34;https://www.pubnub.com/&#34;&gt;PubNub&lt;/a&gt;、CircleCI、TravisCI、AWS、&lt;a href=&#34;http://www.iron.io/&#34;&gt;Iron.IO&lt;/a&gt;、&lt;a href=&#34;https://www.algolia.com/&#34;&gt;Algolia&lt;/a&gt;、そしてもちろんFabricを使っているらしい。コミュニケーションツールはSlack。&lt;/li&gt;
&lt;li&gt;Fabricはバリバリで使っているので色々なコンポーネントの紹介&lt;/li&gt;
&lt;li&gt;ちなみに今朝(多分Flightが原因で)負荷が5倍くらいになったせいで落ちたんだけど、Fabric周辺ツールのおかげですぐに原因が分かって対応できた。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;所感:13b100812254a41a415038807a1df3b8&#34;&gt;所感&lt;/h2&gt;

&lt;p&gt;多分メインホールだけだったからですが、一番の売りであるFabricに関する話が中心でした。
他の話も聞きたかったですが、そもそもFabricをあまり知らなかったのでこれはこれで勉強になりました。
機能によってはGoogleAnalyticsとかで良いじゃんって思ったりもしますが、他に選択肢があるのは良いことですし、ビューも良い感じだったかなと思います。
とりあえず時間があったら試せる範囲で試そうかなと思います。&lt;/p&gt;

&lt;p&gt;そんな感じで以上です。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Full Stack Robotics/IoT Using Go参加レポート</title>
      <link>https://daikikohara.github.io/blog/2015/10/07/iot_using_go_meetup/</link>
      <pubDate>Wed, 07 Oct 2015 14:53:26 -0700</pubDate>
      
      <guid>https://daikikohara.github.io/blog/2015/10/07/iot_using_go_meetup/</guid>
      <description>

&lt;p&gt;マウンテンビューのGoogle本社で行われたGoでIoTデバイスを操作するGobotのイベントの参加メモです。
資料はまだ上がってないので上がった段階で追記します。&lt;/p&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/iot_using_go_meetup/sticker.jpg&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;h1 id=&#34;概要:4e1483c06d6ee255fc83e7ed52ca7805&#34;&gt;概要&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;日時: 2015年10月7日 19:00 - 20:30&lt;/li&gt;
&lt;li&gt;場所: Google Building CL2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.meetup.com/gdg-silicon-valley/events/225643683/&#34;&gt;イベントページ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;内容:4e1483c06d6ee255fc83e7ed52ca7805&#34;&gt;内容&lt;/h1&gt;

&lt;h2 id=&#34;lt-by-kevin:4e1483c06d6ee255fc83e7ed52ca7805&#34;&gt;LT by Kevin&lt;/h2&gt;

&lt;p&gt;イベントページの発表者のlast nameは間違っているらしい(ググったけど映画監督しか出てこなったのはそのせいかｗ)。
正しい苗字はメモれなかった。&lt;/p&gt;

&lt;p&gt;内容はイベントの紹介程度。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GDG DevFest - まもなくポストするとのこと&lt;/li&gt;
&lt;li&gt;なぜか&lt;a href=&#34;https://blogs.oracle.com/javaone/entry/geek_bike_ride_before_javaone1&#34;&gt;Geek Bike Ride&lt;/a&gt;とかいうチャリンカー向けイベントの紹介&lt;/li&gt;
&lt;li&gt;子供向けイベントの紹介。

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.devoxx4kids.org/&#34;&gt;devoxx4kids&lt;/a&gt;という&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gitbook.com/book/kevinnilson/webcomponents4kids/details&#34;&gt;webcomponents4kids&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;子供向けのイベントの紹介では発表者のお子さんの口から、こんなことをした、みたいな紹介が入った。&lt;/p&gt;

&lt;h2 id=&#34;メインセッション:4e1483c06d6ee255fc83e7ed52ca7805&#34;&gt;メインセッション&lt;/h2&gt;

&lt;h3 id=&#34;発表者:4e1483c06d6ee255fc83e7ed52ca7805&#34;&gt;発表者&lt;/h3&gt;

&lt;p&gt;Ron Evans(&lt;a href=&#34;https://twitter.com/deadprogram&#34;&gt;twitterアカウント&lt;/a&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://hybridgroup.com/&#34;&gt;hybridgroup&lt;/a&gt;の人。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gobot.io/&#34;&gt;Gobot&lt;/a&gt;に限らず、&lt;a href=&#34;http://cylonjs.com/&#34;&gt;Cylon.js&lt;/a&gt;,&lt;a href=&#34;http://artoo.io/&#34;&gt;Artoo&lt;/a&gt;といったIoT系のフレームワークを作っている。&lt;/li&gt;
&lt;li&gt;子供向けのRubyのプロジェクトである&lt;a href=&#34;http://kidsruby.com/&#34;&gt;kidsruby&lt;/a&gt;も作っている。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;gobotとは-サイトに書いてあるレベルのまとめ:4e1483c06d6ee255fc83e7ed52ca7805&#34;&gt;Gobotとは(サイトに書いてあるレベルのまとめ)&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://gobot.io/&#34;&gt;Gobot&lt;/a&gt;はGolangで様々なIoTプラットフォーム向けのプログラムが書くためのもの。&lt;/p&gt;

&lt;p&gt;公式ページのトップにはArduinoでLチカするコードが載っているが、Arduinoに限らず15のプラットフォームに対応している(発表後の質疑応答で18と言っていたのでサイトの情報は若干古い模様。またcylon.jsの方が対応プラットフォームが多いとのこと)。
この中にはArduinoのほか、ARDroneやラズパイ、EdisonといったデバイスだけでなくMQTTやOpenCVといったものまで含まれる。
また、GPIOドライバにより7つ、I2Cドライバにより6つの機器をサポートしている。&lt;/p&gt;

&lt;p&gt;APIも用意されており、デバイスの状態を確認することなどが可能。
&lt;a href=&#34;https://github.com/hybridgroup/robeaux&#34;&gt;robeaux&lt;/a&gt;というReact.jsベースのダッシュボードで確認することもできる。&lt;/p&gt;

&lt;p&gt;CLIの場合は&lt;a href=&#34;http://gort.io/&#34;&gt;Gort&lt;/a&gt;を使って操作するようデザインされてるけど&lt;a href=&#34;http://gobot.io/documentation/guides/cli/&#34;&gt;gobot独自のCLI&lt;/a&gt;もある。&lt;/p&gt;

&lt;h3 id=&#34;発表内容:4e1483c06d6ee255fc83e7ed52ca7805&#34;&gt;発表内容&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;アーキテクチャの図(スライド参照)&lt;/li&gt;
&lt;li&gt;ArduinoでLチカ(ちなみに英語ではblinking LED)をするデモ

&lt;ul&gt;
&lt;li&gt;コードはGobotのサイトトップに書いてあるものと全く同じだった。&lt;/li&gt;
&lt;li&gt;Arduino上ではGoは動かないけどコンパイルしたコマンドを送ることができる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Edisonで同じくLチカをするデモ

&lt;ul&gt;
&lt;li&gt;Arduino版とのコードの差分はimort文1行とAdaptor生成部分のみ(&lt;code&gt;firmata.NewFirmataAdaptor(&amp;quot;arduino&amp;quot;, &amp;quot;/dev/ttyACM0&amp;quot;)&lt;/code&gt;が&lt;code&gt;edison.NewEdisonAdaptor(&amp;quot;edison&amp;quot;)&lt;/code&gt;になるだけ)&lt;/li&gt;
&lt;li&gt;edisonの場合は中身がLinuxなのでsshで接続してGoのプログラムを普通に走らせることができる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;続いてEdisonでボタンを押してる間だけ光るデモ&lt;/li&gt;
&lt;li&gt;GobotでAPIを立ち上げるプログラムを動かして、そこにcurlを送るデモ

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;host:port/api/robots&lt;/code&gt;が起点になる模様。&lt;/li&gt;
&lt;li&gt;デモでは操作じゃなくて参照しかしなかった。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gort.io&#34;&gt;Gort&lt;/a&gt;のデモ

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;gort scan bluetooth&lt;/code&gt;でbluetooth接続されている機器を一覧表示してそこから&lt;code&gt;rfcomm connect&lt;/code&gt;で接続(rfcommは普通のLinuxコマンドらしい。知らんかった。)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sphero.com/&#34;&gt;Sphero&lt;/a&gt;のデモ

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hybridgroup/robeaux&#34;&gt;robeaux&lt;/a&gt;を使ったデモ&lt;/li&gt;
&lt;li&gt;WebのUIからコマンド実行してSpheroを動かすデモ。あんまり思った通りの方向に進んでなかったｗ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Twitterで指定のハッシュタグで呟いてSpheroまたはEdisonを抽選で1名にプレゼント！

&lt;ul&gt;
&lt;li&gt;めっちゃ欲しかったけど当たりませんでした。。。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://commander.io/&#34;&gt;commander.io&lt;/a&gt;の紹介

&lt;ul&gt;
&lt;li&gt;phonegapとかionic使って作ってるとのこと。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.parrot.com/products/bebop-drone/&#34;&gt;parrot bebop&lt;/a&gt;という新しいDroneのデモ

&lt;ul&gt;
&lt;li&gt;DroneをPS3のコントローラのジョイスティックで操作して、Droneで撮影している映像をリアルタイムに画面に表示するというデモ&lt;/li&gt;
&lt;li&gt;ジョイスティックは色々な種類があるので、jsonの設定ファイルを指定できるようになっているらしい&lt;/li&gt;
&lt;li&gt;コードは今までのものと比べると長いが、Goルーチンのおかげで、ビデオに撮って表示する部分とコントロールする部分が一つのコードの中でキレイに分離できるとのこと(この方、めっちゃGo推しでしたｗ)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;分かりにくいけど写真貼っておきます。むしろどこにDroneいるか分かるかな、ってクイズにできるレベルですねｗ&lt;/p&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/iot_using_go_meetup/drone.jpg&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;p&gt;簡単ですが以上です。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHub Universe視聴まとめ</title>
      <link>https://daikikohara.github.io/blog/2015/10/02/github-universe-2015/</link>
      <pubDate>Fri, 02 Oct 2015 18:27:02 -0700</pubDate>
      
      <guid>https://daikikohara.github.io/blog/2015/10/02/github-universe-2015/</guid>
      <description>

&lt;p&gt;2015年10月1日、2日にSFで行われた&lt;a href=&#34;http://githubuniverse.com/&#34;&gt;GitHub Universe&lt;/a&gt;の視聴レポートです。
近場でしたがお金とか時間の問題で参加はしてません。
&lt;a href=&#34;http://www.ustream.tv/githubuniverse&#34;&gt;ustreamのライブ&lt;/a&gt;で見てたんですが結構途切れたりしたのと、自分の理解が怪しいところがあるのと、興味がないところはあんまりちゃんと書いてないので、メモ書き程度だと思ってもらえればと思います。
ちなみにKeynote以外は3セッション並列だったんですが、ライブで見てたので自分が見たものだけです。
録画もustreamのサイトから見れるのでちゃんと見たい人はそちらへお願いします。&lt;/p&gt;

&lt;h1 id=&#34;1日目:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;1日目&lt;/h1&gt;

&lt;h2 id=&#34;keynote-by-chris-wanstrath-github-ceo:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Keynote by Chris Wanstrath, GitHub(CEO)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;始まってるのに気づかず最後の方しか見れず。&lt;/li&gt;
&lt;li&gt;最後の方は&lt;a href=&#34;http://gloomyson.github.io/StarCraft/&#34;&gt;StarCraft&lt;/a&gt;の話をしていた。GitHub Pagesで動いてるらしい。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;githubのコマーシャルが流れる:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Githubのコマーシャルが流れる&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;多分あとで&lt;a href=&#34;https://www.youtube.com/user/github/videos&#34;&gt;ここ&lt;/a&gt;に上がるはず？&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;exploring-the-solar-system-from-wherever-you-are-by-joseph-minafra-nasa:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Exploring the Solar System from wherever you are! by Joseph Minafra, NASA&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://sservi.nasa.gov/&#34;&gt;SERVI&lt;/a&gt;の紹介&lt;/li&gt;
&lt;li&gt;月の形成に関するビデオ紹介&lt;/li&gt;
&lt;li&gt;誰でも参加できるような&lt;a href=&#34;http://sservi.nasa.gov/communication-programs/&#34;&gt;イベント&lt;/a&gt;も開いている。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pub.lmmp.nasa.gov/LMMPUI/LMMP_CLIENT/LMMP.html&#34;&gt;Lunar Mapping and Modeling Portal(LMMP)&lt;/a&gt;で月を探索できる。

&lt;ul&gt;
&lt;li&gt;RestAPIもある。(NASAは他にも色々APIあるっぽい)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;月だけじゃなくて&lt;a href=&#34;http://vestatrek.jpl.nasa.gov/&#34;&gt;Vesta&lt;/a&gt;(小惑星用？)とか&lt;a href=&#34;http://marstrek.jpl.nasa.gov/&#34;&gt;火星用&lt;/a&gt;とかもある。&lt;/li&gt;
&lt;li&gt;全然githubは出てこなかった。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;five-years-building-a-culture-and-handing-it-off-by-kellan-elliott-mccrea-former-cto-of-etsy:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Five years, building a culture, and handing it off by Kellan Elliott-McCrea, former CTO of Etsy&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;中継あったけど別作業のため殆ど聞けず。&lt;/li&gt;
&lt;li&gt;ソフトを作るのが下手だから頑張らないといけないみたいな話。&lt;/li&gt;
&lt;li&gt;デプロイするときに現行システムを壊すリスクと自信の話。

&lt;ul&gt;
&lt;li&gt;テストとかモニタリングとかして自信を上げていこう。&lt;/li&gt;
&lt;li&gt;CSSの小さい修正でシステムを破壊したやつがいたりするので、デプロイする修正の規模と比例しないよみたいな。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;using-git-lfs-by-github-microsoft-atlassian:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Using Git LFS by GitHub/Microsoft/Atlassian&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Speaker(それぞれが順番に話していくスタイル)

&lt;ul&gt;
&lt;li&gt;Traci Coffman, GitHub&lt;/li&gt;
&lt;li&gt;Saeed Noursalehi, Microsoft&lt;/li&gt;
&lt;li&gt;Rick Olson, GitHub&lt;/li&gt;
&lt;li&gt;Allen Smith, GitHub&lt;/li&gt;
&lt;li&gt;Steve Streeting, Atlassian&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;rick-from-github:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Rick from GitHub&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Git LFS(Large File Storage)の概要紹介

&lt;ul&gt;
&lt;li&gt;デカいファイルを追加したときにGitレポジトリにはテキストポインタを保存してファイルの実態はLFSに保存するといったことができる。&lt;/li&gt;
&lt;li&gt;LFS用にいくつかのサブコマンドを追加した&lt;/li&gt;
&lt;li&gt;Git hookとintegrateされている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;なんでOSS?

&lt;ul&gt;
&lt;li&gt;他の人にも使ってもらって新しいuse caseを知りたいから。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;LFS1.0リリース

&lt;ul&gt;
&lt;li&gt;APIを書き換えた&lt;/li&gt;
&lt;li&gt;インストーラの改善。特にWindows用。aptもある。&lt;/li&gt;
&lt;li&gt;LFS拡張という仕組みを作った。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;lfsのコマーシャル-https-www-youtube-com-watch-v-11d1zsez8g-が流れた:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=_11d1ZsEZ8g&#34;&gt;LFSのコマーシャル&lt;/a&gt;が流れた。&lt;/h3&gt;

&lt;h3 id=&#34;steve-from-atlassian:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Steve from Atlassian&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;今までいろんなOSS作ってきたけど、Largeファイルの扱いにはいつも苦戦してきた&lt;/li&gt;
&lt;li&gt;自分たち(Atlassian)もGithubも同じことを考えて同じ結論に辿り着いた

&lt;ul&gt;
&lt;li&gt;それぞれgit-lfsとgit-lobというものを作ろうと考えた。同じようなコンセプトでいずれもGoで書こうとした。&lt;/li&gt;
&lt;li&gt;2015年のはじめにmergeすることを決めてアナウンスした。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/github/git-lfs&#34;&gt;https://github.com/github/git-lfs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-lfs.github.com/&#34;&gt;https://git-lfs.github.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;コマンドの実行例とか機能紹介

&lt;ul&gt;
&lt;li&gt;こんな感じでfetchすることもできる&lt;code&gt;git lfs fetch --include=models --exclude=models/vehicles&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ssh apiとかロックといった機能もある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;saeed-noursalehi-microsoft:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Saeed Noursalehi, Microsoft&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;大きなチームのためにgitをスケールさせることを目標にしている&lt;/li&gt;
&lt;li&gt;MicrosoftもLFSにcontributeしている。

&lt;ul&gt;
&lt;li&gt;NTLMauth to LFS clientとかいろいろ(色々書いてあったけどメモ忘れ)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.visualstudio.com/en-us/products/what-is-visual-studio-online-vs.aspx&#34;&gt;VSO&lt;/a&gt;使ってzipファイルをLFSのgitレポジトリにpushするデモ&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;allen-smith-github:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Allen Smith, GitHub&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;デモ(ちなみにエディタはatom)

&lt;ul&gt;
&lt;li&gt;git lfsをインストールする&lt;/li&gt;
&lt;li&gt;.gitconfigをいじる([filter &amp;ldquo;lfs&amp;rdquo;]の下にsmudgeとかcleanとか書いてあったけどよく見えず。。。)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git lfs track &#39;*.png&#39;&lt;/code&gt;とやると対象のファイルをlfsの管理対象にできる&lt;/li&gt;
&lt;li&gt;ローカルのファイルはlfsフォルダ以下に保存される&lt;/li&gt;
&lt;li&gt;lfs用のpre push hookが追加される&lt;/li&gt;
&lt;li&gt;git-lfs pull&lt;/li&gt;
&lt;li&gt;github上ではテキストポインタじゃなくてちゃんとファイルが見える。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;ci-in-world-of-microservices-by-surya-gaddipati-groupon:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;CI in world of MicroServices by Surya Gaddipati, Groupon&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;最初はJenkinsのマスター一つだった&lt;/li&gt;
&lt;li&gt;今は400ジョブ、18,000ビルド/week&lt;/li&gt;
&lt;li&gt;今までCIがダメで辞めた人もいた

&lt;ul&gt;
&lt;li&gt;CIがダメだとbad cultureを引き起こす&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;今の仕組みではビルド(デプロイ)ボタンを押したらジョブを設定してパーミッションに応じたsshキーの作成やコードのpush、独立した環境用のマシンの作成などを行い独立した環境でビルドが走る(のを目指している？)&lt;/li&gt;
&lt;li&gt;UI - CIはキレイで直感的なUIを持つべき。JenkinsのUIは古臭い。&lt;/li&gt;
&lt;li&gt;Metrics - ビルド、デプロイではどれくらい時間がかかるか等を測って最適化するべき。&lt;/li&gt;
&lt;li&gt;Extensible - CIはextensibleであるべき。JenkinsはExtensibleという意味では非常に良い。&lt;/li&gt;
&lt;li&gt;Secure - CIはセキュアであるべき。誰がアクセスできるか、誰がpushできるか、等。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/groupon/DotCi&#34;&gt;DotCi&lt;/a&gt;というOSSのCIツールを作った。

&lt;ul&gt;
&lt;li&gt;一言で言うとJenkinsをTraviceCIのようにするもの？&lt;/li&gt;
&lt;li&gt;JenkinsとGithubとDockerをつなぐ&lt;/li&gt;
&lt;li&gt;ジョブの設定はバージョン管理できるべき。DotCiもymlで設定できるからバージョン管理できる。&lt;/li&gt;
&lt;li&gt;ジョブは簡単に並列化できるべき。DotCiでもymlに書くだけで並列化できる。&lt;/li&gt;
&lt;li&gt;metricsの例としてビルド時間の遷移グラフの紹介。&lt;/li&gt;
&lt;li&gt;DotCiもExtensible。DotCiのプラグインが書ける。&lt;/li&gt;
&lt;li&gt;GithubAuthorization。Githubのレポジトリのアクセス権とのマッピングができる。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;スライドが大分崩れてた。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;every-company-is-a-software-company-パネルディスカッション:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Every Company is a Software Company(パネルディスカッション)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Speaker

&lt;ul&gt;
&lt;li&gt;Kakul Srivastava, GitHub&lt;/li&gt;
&lt;li&gt;Michael Davis, John Deere&lt;/li&gt;
&lt;li&gt;Dragos Maciuca, Ford&lt;/li&gt;
&lt;li&gt;Hima Mukkamala, GE&lt;/li&gt;
&lt;li&gt;Samir Shah, Target&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;自己紹介が終わったタイミングでストリーミング一時停止&lt;/li&gt;
&lt;li&gt;まとめると

&lt;ul&gt;
&lt;li&gt;ソフトウェアはリリースしても終わりじゃないってことを理解しよう&lt;/li&gt;
&lt;li&gt;いろんなバックグランドの人とコラボすることになるからお互いを理解しよう&lt;/li&gt;
&lt;li&gt;ツールを使うことになったりしたら教育しよう&lt;/li&gt;
&lt;li&gt;エンジニアが何かを試したいって言ってきたときに試させてあげるのが大事&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;みたいな感じ？&lt;/p&gt;

&lt;h2 id=&#34;10-ways-people-are-mis-using-github-pages-for-fun-and-profit-by-ben-balter-github:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;10 ways people are (mis)using GitHub Pages for fun and profit by Ben Balter, GitHub&lt;/h2&gt;

&lt;p&gt;同じ時間の他のセッションも聞きたかったけどちょうどGitHub Pages使ったばかりだったのでこれを聞くことに。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHubPages&lt;/a&gt;は主に以下の3つのことに使える

&lt;ul&gt;
&lt;li&gt;project page&lt;/li&gt;
&lt;li&gt;personal page&lt;/li&gt;
&lt;li&gt;organization page&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;staticページはHTML,JavaScript,CSSだけで作れる。昔はPHPでやってたようなことがこの3つでできる。&lt;/li&gt;
&lt;li&gt;WordpressとかDrupalみたいなCMSも流行ったけど、bespoke pageを生成するし、スケールさせようとすると複雑になる。GitHubPagesならGitHubにpushするだけ。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gh-pages&lt;/code&gt;ブランチ切ったり等の作り方の説明&lt;/li&gt;
&lt;li&gt;GitHugPagesの10の使い方(例は全部jekyllだった)

&lt;ol&gt;
&lt;li&gt;Collaboration - editボタン設置してtypo直してもらったりおかしなところを直してもらうとか&lt;/li&gt;
&lt;li&gt;CI - &lt;a href=&#34;https://github.com/gjtorikian/html-proofer&#34;&gt;html proofer&lt;/a&gt;みたいなツール使ってツールでバリデーションもできる。&lt;/li&gt;
&lt;li&gt;Collections - &lt;a href=&#34;http://choosealicense.com/&#34;&gt;choosealicense.com&lt;/a&gt;みたいなサイトを作れる。&lt;/li&gt;
&lt;li&gt;Data - アプリで使うjsonファイルとかの置き場にも使える。pushするだけでビルドしなくて良いしお金もかからない。例は&lt;a href=&#34;http://usdeptveteransaffairs.github.io/&#34;&gt;U.S. Department of Veterans Affairs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Collaborative Policy Making - &lt;a href=&#34;https://project-open-data.cio.gov/&#34;&gt;Project Open Data&lt;/a&gt;とか政府のプロジェクトでも使っている。ポリシーを決める際にgithubを使うことで誰でもissueを上げたり、pull request送ったりできる。(素晴らしいので日本でもやって欲しい。)&lt;/li&gt;
&lt;li&gt;Branded Profiles - 技術系の会社は&lt;a href=&#34;https://twitter.github.io/&#34;&gt;twitter&lt;/a&gt;とか&lt;a href=&#34;https://sap.github.io/&#34;&gt;sap&lt;/a&gt;とか&lt;a href=&#34;http://ibm.github.io/&#34;&gt;ibm&lt;/a&gt;とか&lt;a href=&#34;https://microsoft.github.io/&#34;&gt;microsoft&lt;/a&gt;とか&lt;a href=&#34;https://yelp.github.io/&#34;&gt;yelp&lt;/a&gt;とかいろんな会社が作ってるよって紹介。技術系じゃなくても&lt;a href=&#34;https://cfpb.github.io/&#34;&gt;cfpb&lt;/a&gt;とかも作ってる。&lt;/li&gt;
&lt;li&gt;private sites - まだパブリックにしたくない場合はprivateにもできる。jekyll-authを使うと簡単にできる。&lt;/li&gt;
&lt;li&gt;Documentation - github helpはGitHub Pagesで作られているらしい。&lt;a href=&#34;http://lunrjs.com/&#34;&gt;lunr.js&lt;/a&gt;使ってクライアントサイドサーチを使っているらしい。&lt;/li&gt;
&lt;li&gt;Automated Publishing - 小さいお店とかでもメールを受信してそれをベースにパブリッシュするような仕組みを作ってたりする。やりかたはいくつかある。普通にaddしてcommitしてpullしてやったり、GitHubのCRUD API使ったり(&lt;a href=&#34;https://developer.github.com/v3/repos/contents/&#34;&gt;これ？&lt;/a&gt;)。&lt;/li&gt;
&lt;li&gt;Client-side Applications - StarCraftの話をしたかったけど最初にされちゃったので、&lt;a href=&#34;http://prose.io/&#34;&gt;prose&lt;/a&gt;の紹介。GitHub Pages上でファイルの作成・削除・編集とかができるみたい。&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;1日目最後のkeynoteはライブ無し:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;1日目最後のKeynoteはライブ無し&lt;/h2&gt;

&lt;h1 id=&#34;2日目:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;2日目&lt;/h1&gt;

&lt;h2 id=&#34;keynote-by-nicole-sanchez-github-and-tiffani-ashley-bell-detroit-water-project:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Keynote by Nicole Sanchez, GitHub and Tiffani Ashley Bell, Detroit Water Project&lt;/h2&gt;

&lt;h3 id=&#34;tiffani:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Tiffani&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.detroitwaterproject.org/&#34;&gt;Detroit Water Project&lt;/a&gt;の人&lt;/li&gt;
&lt;li&gt;アメリカでは35,000,000世帯が水道料金等の基本料金を払うことも難しいくらい貧しい。&lt;/li&gt;
&lt;li&gt;そういった人たちのためにお金を払えたらどうかということを考えた。&lt;/li&gt;
&lt;li&gt;Twitterで呟いて反応した人たちとGitHub上でプロジェクトを作って、困っている人とドナーをつなぐシステムを作った。自分はエンジニアじゃないけど会ったこともない人とコラボできたのは素晴らしいと感じた。&lt;/li&gt;
&lt;li&gt;払えない人はインタビューだけじゃなくて水道会社からスクレイプしたデータを使って本当に困っているか確認しているらしい。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;nicole:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Nicole&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.refugerestrooms.org/&#34;&gt;refuge restroom&lt;/a&gt;という主にtrans gender向けにrest roomを検索できるプロジェクトも同じようなコンセプトでGitHub上で開発されている。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://connecthome.hud.gov/&#34;&gt;connecthome.hud.gov&lt;/a&gt;という貧困層にブロードバンドをもたらすプロジェクトも同様。

&lt;ul&gt;
&lt;li&gt;インターネットにアクセスしないとできないホームワークがあるのにアクセスできない子どもたちがいるのはおかしい&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;まだ自分がdevelperじゃないと思ってる層を発見していきたい。次の天才、革命者を発見したい。埋もれた才能を発見するのは我々の責任。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;chike-aguh:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;chike aguh&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;スピーカーに名前がなかったけど&lt;a href=&#34;http://everyoneon.org/&#34;&gt;everyoneon&lt;/a&gt;の人みたい&lt;/li&gt;
&lt;li&gt;everyoneonは情報格差をなくすためのプロジェクトでconnecthomeはeveryoneonの一部みたい。&lt;/li&gt;
&lt;li&gt;インターネットアクセスが無い子どもたちの中には深夜や早朝にマクドナルドの周辺で宿題をやる子供もいる。&lt;/li&gt;
&lt;li&gt;こういった層をなんとかするのは我々の責任。皆に参加して欲しい。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;anil-dash-founder-makerba-se:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Anil Dash, Founder, makerba.se&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;多くの人は誰がインターネットを作ったのか知らないし、自分が使ってるアプリを誰が作ったのかも知らない。伝えられたストーリーしか知らないから我々は伝えなければならない。
同時に相手にキミは何を作ったのかを聞かなきゃいけない。みたいな抽象的な話。よく分からんかった。。。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;makerba.se/universe&#34;&gt;ここ&lt;/a&gt;でやってねみたいな。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;marianna-tessel-svp-of-engineering-docker:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Marianna Tessel, SVP of Engineering, Docker&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;コミュニティの話。結論的にはどんなコミュニティでも良いから関わろうみたいな感じ？&lt;/li&gt;
&lt;li&gt;途中で出てきた色々な数字

&lt;ul&gt;
&lt;li&gt;Dockerイメージのダウンロード数は800,000,000/月&lt;/li&gt;
&lt;li&gt;Dockerの公開レポジトリは77%が外からのコントリビュート&lt;/li&gt;
&lt;li&gt;Meetupは60の国で210グループある&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;rethinking-production-monitoring-by-james-smith-bugsnag:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Rethinking Production Monitoring by James Smith, Bugsnag&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;映像切れきれ&lt;/li&gt;
&lt;li&gt;技術的負債は返済するのが大変&lt;/li&gt;
&lt;li&gt;開発者は40%の時間をバグの原因究明にかけてるという調査がある&lt;/li&gt;
&lt;li&gt;以下は良くない

&lt;ul&gt;
&lt;li&gt;リリースが最後のプロセスだと思ってしまう&lt;/li&gt;
&lt;li&gt;ユーザが文句を言うまで待ってしまう&lt;/li&gt;
&lt;li&gt;誰も文句を言ってないからOKだと思ってしまう&lt;/li&gt;
&lt;li&gt;誰の責任かという問題が欠如してしまっている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;7つの原理

&lt;ul&gt;
&lt;li&gt;ACCEPT - ソフトウェアが出荷後に壊れることを認める&lt;/li&gt;
&lt;li&gt;AUTOMATE - エラー・不具合を検知できる仕組みを導入しておく&lt;/li&gt;
&lt;li&gt;AGGREGATE - エラーをただ流れてくるまま見るのではなく、グルーピングしたりする&lt;/li&gt;
&lt;li&gt;NOTIFY - エラーで逐一メール通知とかじゃなくてグルーピングした単位とかでこのエラーだけ送るみたいなことをしてノイズを減らす&lt;/li&gt;
&lt;li&gt;PRIORITIZE - 全てのバグを直すことはできない&lt;/li&gt;
&lt;li&gt;DIAGNOSE - 何が問題かというだけじゃなくて、こうすれば直るみたいなActionableなものにする&lt;/li&gt;
&lt;li&gt;TEND - 誰も見ないという状態をなくして、誰かがエラーをケアするという状態を当たり前にする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;実際の例

&lt;ul&gt;
&lt;li&gt;failure hooksを使う。言語に組み込まれているようなものがあればそれを使う(JavaのUncaughtExceptionHandlerとか)。なければコードが何分以上かかったら何かをするというような処理で代替するとか。&lt;/li&gt;
&lt;li&gt;影響を測定する。それぞれの問題で何人に影響があるか等。&lt;/li&gt;
&lt;li&gt;深刻さを測定する。上記と似ているが違うもの。管理画面のエラーなら気にしないとか、paymentのページで出ているなら重要等、セグメントで優先度を付ける。&lt;/li&gt;
&lt;li&gt;Capture Diagnostic Data。再現可能なデータを取れるようにしておく。いくら使った時に出るかや、どのデバイスで出ているか等。クラッシュ時にそれらのデータを取得できるようにしておく。&lt;/li&gt;
&lt;li&gt;コラボレーションしやすくしておく。チャット使うとか。チャットに不具合を送る仕組みを入れるとか。&lt;/li&gt;
&lt;li&gt;不具合対応の進捗を追跡できるようにしておく。JIRAとかを使って人をアサインしたり。&lt;/li&gt;
&lt;li&gt;Team Structures。誰もケアしないという状態を作らない。エンジニアのストラクチャを考えなおす。バグはサポートじゃなくてエンジニアがケアする。&lt;/li&gt;
&lt;li&gt;Create a bug team。バグをケアするチームを作る。一人では無理。もしくはローテーションを組むのも良い。プロダクトの知識が深まる。&lt;/li&gt;
&lt;li&gt;誰がそのコードを最後に触ったかを知る。責任を押し付けるためじゃないけど知るのは大事。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;changing-lives-with-open-data-by-hidenori-fujimura-geospatial-information-authority-of-japan-abhi-nemani-danny-whalen-remix:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Changing Lives with Open Data by Hidenori Fujimura, Geospatial Information Authority of Japan, Abhi Nemani, Danny Whalen, Remix&lt;/h2&gt;

&lt;h3 id=&#34;hidenori-fujimura:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Hidenori Fujimura&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;日本人登場。めっちゃ日本人英語で和むｗ&lt;/li&gt;
&lt;li&gt;GeoデータをBSDとかCC0のライセンスで提供している&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://maps.gsi.go.jp/&#34;&gt;これ&lt;/a&gt;かな？&lt;/li&gt;
&lt;li&gt;disaster情報の提供

&lt;ul&gt;
&lt;li&gt;御嶽山の噴火時の例&lt;/li&gt;
&lt;li&gt;洪水の例&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;droneで撮った映像とかも&lt;/li&gt;
&lt;li&gt;iOS9で動かないのでコントリビューション待ってます的な。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;danny-from-remix:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Danny from remix&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://getremix.com/&#34;&gt;remix&lt;/a&gt;の会社紹介

&lt;ul&gt;
&lt;li&gt;transitシステム&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.openstreetmap.org/&#34;&gt;OpenStreetMapData&lt;/a&gt;とか&lt;a href=&#34;https://developers.google.com/transit/gtfs/&#34;&gt;GTFS&lt;/a&gt;とかのOpen Dataを使っている。&lt;/li&gt;
&lt;li&gt;データとかAPIの観点で考えると乗り物と場所のデータになるけど、15分以上待ちたくないとかユーザ視点で考えるべき。Human Experienceが大事みたいな。&lt;/li&gt;
&lt;li&gt;理解が怪しい。。。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;abhi:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;abhi&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;肩書が書かれてなかった。LAの何かの人&lt;/li&gt;
&lt;li&gt;LAのウェブサイト

&lt;ul&gt;
&lt;li&gt;400くらいのデータセットを提供しているけど誰も使わなかった。&lt;/li&gt;
&lt;li&gt;Open Dataにしてusefulだと思わせてからは使うようになった。&lt;/li&gt;
&lt;li&gt;バウンスレートも50%から5%になった。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;何かのダッシュボード

&lt;ul&gt;
&lt;li&gt;GoogleDocsのデータを表示するだけだけど技術を知らない人からしたらこれだけでも有用性が変わるみたいな話&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;犯罪情報は利用できるまで18ヶ月かかるけどこれをもっと早くしたい&lt;/li&gt;
&lt;li&gt;理解が怪しい。。。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;electron-desktop-apps-with-web-languages-by-jessica-lord-github:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Electron: Desktop Apps with Web Languages by Jessica Lord, GitHub&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Electronの概要

&lt;ul&gt;
&lt;li&gt;atomを開発する際に生まれたもの&lt;/li&gt;
&lt;li&gt;CEF(Chromium Embedded Framework)や&lt;a href=&#34;http://nwjs.io/&#34;&gt;NW.js&lt;/a&gt;使ったけど合わなかったのでElectronが始まった。&lt;/li&gt;
&lt;li&gt;ChromiumベースでHTML、CSSの、JavaScriptだけでクロスプラットフォームデスクトップアプリが作れる。&lt;/li&gt;
&lt;li&gt;node.js使えるからnpmをそのまま使える。ファイルシステムにもアクセスできる。&lt;/li&gt;
&lt;li&gt;OSのファイルダイアログとかnotificationとかも使える&lt;/li&gt;
&lt;li&gt;OSの自動更新とかwinインストーラとかにも対応できる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Electronの中身の紹介

&lt;ul&gt;
&lt;li&gt;メインプロセスとサブプロセスでどんな感じで動いてるかのお話。&lt;/li&gt;
&lt;li&gt;図無しのテキストだと意味分からないと思うので省略&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;軽いデモ

&lt;ul&gt;
&lt;li&gt;npm install -g electron-prebuild&lt;/li&gt;
&lt;li&gt;electron .&lt;/li&gt;
&lt;li&gt;以上、HelloWorldが動いた的な。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Electron使ってる企業紹介。MSとかSlackもElectronでプロダクトを作っているらしい。&lt;/li&gt;
&lt;li&gt;Electron使ってるOSSの紹介

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/muan/mojibar&#34;&gt;mojibar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mafintosh/playback&#34;&gt;playback&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;API1.0を1月に出す予定

&lt;ul&gt;
&lt;li&gt;AppStore compatibleにする&lt;/li&gt;
&lt;li&gt;Windowsサポートの充実&lt;/li&gt;
&lt;li&gt;ドキュメントの充実&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://electron.atom.io/&#34;&gt;electron.atom.io&lt;/a&gt;見てね。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ここでバトンタッチしてjiboの話:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;ここでバトンタッチしてJiboの話&lt;/h3&gt;

&lt;p&gt;スピーカーの名前無いけど&lt;a href=&#34;http://blog.jibo.com/2015/07/29/jibo-making-development-readily-accessible-to-all-developers/&#34;&gt;このブログ&lt;/a&gt;の右の人&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jibo.com/&#34;&gt;Jibo&lt;/a&gt;は世界初のファミリーロボットでありプラットフォームである。&lt;/li&gt;
&lt;li&gt;Jiboが挨拶するデモ&lt;/li&gt;
&lt;li&gt;SDKはElectronで作られている&lt;/li&gt;
&lt;li&gt;JIBOでできること

&lt;ul&gt;
&lt;li&gt;スピーチ recognitionとかできる&lt;/li&gt;
&lt;li&gt;音がどこから来るか、誰が話しているか分かる&lt;/li&gt;
&lt;li&gt;Text to Speechもできる&lt;/li&gt;
&lt;li&gt;エレクトロンでできることは全てできる&lt;/li&gt;
&lt;li&gt;自然言語を理解できる&lt;/li&gt;
&lt;li&gt;タッチセンサーもある&lt;/li&gt;
&lt;li&gt;顔の部分にアニメーション表示できる。ウィンクとかもできる。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;開発のデモ

&lt;ul&gt;
&lt;li&gt;3DのデザインツールみたいなのでGUIで弄ってる
＊jibo runって打つと実機の顔にアニメーションが流れる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;価格は750ドル&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;offline-web-apps-on-github-pages-by-myk-melez-mozilla:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Offline Web Apps on GitHub Pages by Myk Melez, Mozilla&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;オフラインアプリとはネットワーク接続して無くても動くアプリ&lt;/li&gt;
&lt;li&gt;ApplicationCacheがあったけど実装によっては長い間更新されない問題とかが多発してるので廃止することになった&lt;/li&gt;
&lt;li&gt;ServiceWorkers使ってね

&lt;ul&gt;
&lt;li&gt;別のコンテキスト、別のスレッドで動く&lt;/li&gt;
&lt;li&gt;ブラウザがサポートしてなければ普通にオンラインで動く&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mozilla.github.io/oghliner/&#34;&gt;OGHLINER&lt;/a&gt;(オフライナーと読む)を使うとGitHub Pagesでオフラインアプリを簡単に作れる

&lt;ul&gt;
&lt;li&gt;オフラインアプリ用にServiceWorkerを作ってくれる&lt;/li&gt;
&lt;li&gt;デプロイメント - GitHub Pages用にデプロイしてくれる&lt;/li&gt;
&lt;li&gt;auto deploy via travis - masterにpushしたらデプロイしてくれる(まだ問題があるらしい)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;デモ

&lt;ul&gt;
&lt;li&gt;オフライナー自体でgulpを使ってるらしい。&lt;/li&gt;
&lt;li&gt;oghliner offline distでキャッシュをするファイルを指定する？&lt;/li&gt;
&lt;li&gt;oghliner deploy distでデプロイする&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;カウントダウンするだけのアプリのデモ

&lt;ul&gt;
&lt;li&gt;ネットワークをオフにしてタブ閉じたりブラウザ閉じて開いたりしてもカウントダウンを続けてる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ServiceWorkersの注意

&lt;ul&gt;
&lt;li&gt;HTTPSが必要。ローカルにはいらない。&lt;/li&gt;
&lt;li&gt;backgroundsync、webpushとかにも使える&lt;/li&gt;
&lt;li&gt;CORS。(の何が注意かよく分からなかった)&lt;/li&gt;
&lt;li&gt;ServiceWorkerは全てin progress(Firefox)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;mobileでも動くか？

&lt;ul&gt;
&lt;li&gt;chromeは動く。FFも動くようになる。safariは知らん。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;keynote-by-marco-annunziata-chief-economist-ge:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;Keynote by Marco Annunziata, Chief Economist, GE&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;殆ど聞かず。&lt;/li&gt;
&lt;li&gt;とりあえずGEデジタルというソフトウェア会社を2011年に始めて250人から2015年には14000人の開発者と30000人のスタッフに成長したって話だけ聞いた。&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;感想:db5f55ac7c63c0f449d84a630e3141c6&#34;&gt;感想&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;LFSは専用のコマーシャルが流れたくらいなので今回の一番の売りはLFS1.0のリリースだったみたい？&lt;/li&gt;
&lt;li&gt;Open Dataのポリシーとか政府系のプロジェクトでもGitHub使って誰でもissue上げたりPR送れたりするのは良さそう。日本でもやって欲しい。&lt;/li&gt;
&lt;li&gt;貧困層へのアプローチが必要等、日本の技術系カンファレンスでは出てこない話題があって面白かった。(日本には貧困層が少ないからとか言われそうだけど)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;かなり適当ですが以上です。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SimpleSwipeFlashcard - Android用単語帳アプリ</title>
      <link>https://daikikohara.github.io/work/simpleswipeflashcard_ja/</link>
      <pubDate>Sun, 20 Sep 2015 12:17:31 -0700</pubDate>
      
      <guid>https://daikikohara.github.io/work/simpleswipeflashcard_ja/</guid>
      <description>

&lt;p&gt;&lt;u&gt;&lt;a href=&#34;https://daikikohara.github.io/work/simpleswipeflashcard_en/&#34;&gt;Click here to see English Description&lt;/a&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;メニュー&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#About:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;アプリについて&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#Announcement:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;お知らせ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#Update:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;更新履歴&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#How:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;使い方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#FAQ:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#BUG:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;既知の不具合&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;About:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;アプリについて&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=daikikohara.flashcard&#34;&gt;SimpleSwipeFlashcard&lt;/a&gt;はAndroid上で単語帳の作成・編集および、作成した単語帳のテストを行う機能を提供するアプリです。&lt;br&gt;
詳細は上記のリンクをクリックしてGooglePlay上のアプリの説明ページをご覧ください。&lt;/p&gt;

&lt;h1 id=&#34;Announcement:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;お知らせ&lt;/h1&gt;

&lt;p&gt;現在お知らせは特にありません。&lt;br&gt;
現在確認されている不具合は&lt;a href=&#34;#BUG:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;既知の不具合&lt;/a&gt;をご確認ください。&lt;/p&gt;

&lt;h1 id=&#34;Update:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;更新履歴&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;2015/09/21 - Version1.0.0リリース&lt;/li&gt;
&lt;li&gt;2015/09/21 - Version1.0.1リリース&lt;br&gt;
一部の機種で&amp;rdquo;裏面へ&amp;rdquo;ボタンタップ時にアプリがクラッシュする問題を修正しました。&lt;/li&gt;
&lt;li&gt;2015/09/23 - Version1.0.2リリース&lt;br&gt;
シャッフルテスト時に画面の回転等により再度順番がシャッフルされ、同じ単語が複数回表示されてしまう等の不具合を修正しました。&lt;/li&gt;
&lt;li&gt;2015/09/25 - Version1.1.0リリース&lt;br&gt;
テスト中に単語を暗記済みにすることができるようになりました。&lt;/li&gt;
&lt;li&gt;2015/09/26 - Version1.1.1リリース&lt;br&gt;
以下の不具合を修正しました。

&lt;ul&gt;
&lt;li&gt;裏面で暗記済みにした際にカウントがずれてしまう&lt;/li&gt;
&lt;li&gt;端末の言語設定変更時にアプリの設定がおかしくってしまう&lt;/li&gt;
&lt;li&gt;まれに戻るボタンが連打されてしまう&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2015/09/29 - Version1.1.2リリース&lt;br&gt;
端末のフォントサイズ設定によって画面の表示が崩れる問題を修正しました。&lt;/li&gt;
&lt;li&gt;2015/10/09 - Version1.1.3リリース&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;Android 6.0(Marshmallow)に対応しました。&lt;/li&gt;
&lt;li&gt;単語を1行でなく複数行で登録できるように変更しました。&lt;/li&gt;
&lt;li&gt;単語の最大文字数を100文字から1000文字に変更しました。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;How:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;使い方&lt;/h1&gt;

&lt;h2 id=&#34;1-単語帳一覧画面:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;1. 単語帳一覧画面&lt;/h2&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/jp/main.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;右下の赤い「+」ボタンをタップすると手動で単語帳が追加できます。&lt;/li&gt;
&lt;li&gt;右上のメニューアイコンをタップすると下記のメニューが開きます。&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/jp/main_menu.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;ダウンロード&amp;rdquo;をタップするとダウンロード用のダイアログが開きます。ダウンロード可能な単語帳は全て無料でご利用頂けます。&lt;/li&gt;
&lt;li&gt;&amp;ldquo;インポート&amp;rdquo;をタップすると、以前GoogleDriveにエクスポートした単語帳(後述)をインポートすることができます。&lt;/li&gt;
&lt;li&gt;&amp;ldquo;全単語帳をエクスポート&amp;rdquo;をタップすると端末上の全ての単語帳をGoogleDriveにエクスポートすることができます。
エクスポートの詳細は後述します。&lt;/li&gt;
&lt;li&gt;&amp;ldquo;シェアする&amp;rdquo;をタップするとメール等で本アプリのことを友達等にシェアすることが可能です。今後の開発やダウンロード用の単語帳追加へのモチベーション向上にも繋がるので良かったらぜひシェアお願いします。&lt;/li&gt;
&lt;li&gt;&amp;ldquo;ヘルプ&amp;rdquo;をタップするとヘルプが開きます。利用前に一度ご確認ください。&lt;/li&gt;
&lt;li&gt;&amp;ldquo;設定&amp;rdquo;をタップすると設定画面が開きます。&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/jp/main_tap.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;リストから単語帳(この例ではExampleしかありませんが)をタップすると上記のテスト開始用のダイアログが開きます。
テストの条件を指定することが可能です。&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/jp/main_longpress.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;リストから単語帳を長押しすると上記の単語帳用のメニューが開きます。
単語帳の編集や削除、GoogleDriveへのエクスポートが可能です。
エクスポートした単語帳はSimpleSwipeFlashcardフォルダ内にスプレッドシートファイル形式で保存されます。
そのため、PC等で単語帳を編集し、再び本アプリにインポートすることができます。&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/jp/main_swipe.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;単語帳をスワイプすることでも操作が可能です(左右)。スワイプ時のアクションは設定画面で変更可能です。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-単語帳編集画面-単語一覧画面:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;2. 単語帳編集画面(単語一覧画面)&lt;/h2&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/jp/edit.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;右下の赤い「+」ボタンをタップすると単語/意味の追加ができます。&lt;/li&gt;
&lt;li&gt;右上のメニューアイコンをタップすると下記のメニューが開きます。&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/jp/edit_menu.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;タイトルを編集&amp;rdquo;をタップすると単語帳名を変更することが可能です。&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/jp/edit_tap.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;リストから単語をタップすると上記のメニューが開きます。
ここでは単語/意味の編集と削除、暗記済み/未暗記の入れ替えが可能です。&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/jp/edit_swipe.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;単語一覧でもスワイプすることでの操作が可能です。スワイプ時のアクションは設定画面で変更可能です。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;3-テスト画面:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;3. テスト画面&lt;/h2&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/jp/test.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;読み上げ&amp;rdquo;ボタンをタップするとAndroidの組み込み機能により合成音声で単語を読み上げます。発音の確認にご利用ください。対応している端末のみで利用可能です。&lt;/li&gt;
&lt;li&gt;&amp;ldquo;暗記済み&amp;rdquo;ボタンをタップすると単語を暗記済み(詳細は後述)とします。&lt;/li&gt;
&lt;li&gt;&amp;ldquo;裏面へ&amp;rdquo;ボタンをタップするとカードを裏面(単語の意味)にひっくり返します。&amp;rdquo;裏面へ&amp;rdquo;ボタンをタップした単語は&amp;rdquo;忘れてた&amp;rdquo;単語としてカウントされます。&lt;/li&gt;
&lt;li&gt;次の単語へ進むときはカードを左にスワイプします。&amp;rdquo;裏面へ&amp;rdquo;ボタンをタップせずに次のカードに進んだ単語は&amp;rdquo;覚えてた&amp;rdquo;単語としてカウントされます。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;4-テスト結果画面:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;4. テスト結果画面&lt;/h2&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/jp/result.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;終了&amp;rdquo;ボタンをタップすると単語帳一覧画面に戻ります。&lt;/li&gt;
&lt;li&gt;&amp;ldquo;リトライ&amp;rdquo;ボタンをタップすると&amp;rdquo;忘れてた単語&amp;rdquo;のみリトライすることができます。&lt;/li&gt;
&lt;li&gt;この画面は設定で非表示にすることが可能です。その場合、自動で&amp;rdquo;忘れてた単語&amp;rdquo;のみリトライする/しないも設定可能です。&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/jp/result_fail.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;忘れてた単語&amp;rdquo;の一覧画面です。ボタンタップ時の動作は前述の画面と同じです。&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/jp/result_remember.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;暗記済みとされる単語の一覧画面です。単語は以下の場合に暗記済みとなります。

&lt;ul&gt;
&lt;li&gt;一定回数(回数は設定画面で変更可能)&amp;ldquo;覚えてた&amp;rdquo;単語としてテストを終了した場合&lt;/li&gt;
&lt;li&gt;テスト中に該当の単語で&amp;rdquo;暗記済み&amp;rdquo;ボタンをタップした場合&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;暗記済みとなった単語は次回以降のテストでは出てきません。(暗記済み単語のテストを選択した場合は除く)&lt;/li&gt;
&lt;li&gt;チェックを外すと暗記済みにしないようにできます。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;5-設定画面:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;5. 設定画面&lt;/h2&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/jp/settings.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;p&gt;この画面は見ての通りだと思うので説明は省略します。
様々な項目の設定が可能になっていますので、自分に合った設定で使ってみてください。&lt;/p&gt;

&lt;h1 id=&#34;FAQ:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;FAQ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;b&gt;Q. 読み上げ機能が使えない&lt;/b&gt;&lt;br&gt;
A. 読み上げはAndroidに組み込まれているText to Speech(テキスト読み上げ)という機能を使っています。
ご利用の端末がText to Speechに対応しているかご確認ください。
また、ご利用の端末によっては音声データ事前に音声データのダウンロードが必要となる場合があります。アプリ内で言語選択時にダウンロードされるはずですので、インターネット接続等をご確認の上再度実行してみてください。インターネット接続していてもアプリ内からダウンロードできない場合は、端末の設定画面から直接ダウンロードをしてみてください。
併せて、端末の音量設定もご確認ください。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Q. 単語帳のダウンロードができない&lt;/b&gt;&lt;br&gt;
A. 端末がオンラインであるかご確認ください。また、設定画面で&amp;rdquo;フィードバックを送信&amp;rdquo;がオンになっていることを確認してください。(フィードバック送信の詳細はヘルプをご確認ください。)
ネットワーク・サーバ側の不具合で一時的に利用できない場合もあります。恐れいりますが、その場合はしばらくしてからお試しください。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Q. インポート/エクスポート/ダウンロードでエラーが出てしまう&lt;/b&gt;&lt;br&gt;
A. ネットワーク・サーバ側の問題で一時的に利用できない可能性があります。表示されるメッセージの通りになりますが、しばらくしてからやり直してください。インポート/エクスポートの場合は可能であればデータサイズ(単語帳の数や単語帳内の単語数)を減らして試してみて貰えればと思います。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Q. エクスポートしたGoogleDrive上のフォルダをPCブラウザ等から見ると同じ名前のファイルが並んでいる&lt;/b&gt;&lt;br&gt;
A. キャッシュの問題で発生してしまうようです。ページをリロードすることで解消されます。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Q. 自分が作った単語帳を友達にシェアしたい&lt;/b&gt;&lt;br&gt;
A. 申し訳ありませんが現在のところアプリ内で行うことはできません。お手数ですがGoogleDriveを経由してのファイル共有をお願いします。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Q. 機種変更時に単語帳が消えてしまった&lt;/b&gt;&lt;br&gt;
A. 現在は容量等の関係で端末変更時には設定のみ引き継げるようになっています。
お手数ですが、単語帳を引き継ぐ場合は古い端末でGoogleDriveにエクスポートし、それを新しい端末でインポートしてください。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Q. 単語帳の意味に同じようなものが並んでいる&lt;/b&gt;&lt;br&gt;
A. 中学英語・高校英語の単語帳はパブリックドメインの辞書とのマッチングを機械的に行ったあとに余り整形せずに多くの意味を載せています。
その他の単語帳では自動詞・他動詞は別の行に分けています。例えば、「と連絡する」と「連絡する」という2行があった場合、その単語は自動詞にも他動詞にもなれるものです。
なお、同じ行に「と連絡する  接触する」等と並んでいた場合は2つ目以降の単語は他動詞ですが「と、を」等の助詞を省略しています。(2つ目以降にも付いているケースもあり、統一されていませんがご了承ください。)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;BUG:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;既知の不具合&lt;/h1&gt;

&lt;h2 id=&#34;未解決:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;未解決&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;カードを裏返すアニメーションがAndroid6.0(Marshmallow)だとおかしくなる不具合が報告されています。現在確認中です。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;解決済み:e5366aa6e519a0bdbdf020453b8df8a1&#34;&gt;解決済み&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Version1.0.1で解消&lt;br&gt;
一部の機種で&amp;rdquo;裏面へ&amp;rdquo;ボタンをタップするとアプリがクラッシュしてしまう現象が確認されています。詳細が確認出来次第修正を行います。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Version1.0.2で解消&lt;br&gt;
シャッフルテスト時に画面の回転等により再度順番がシャッフルされ、同じ単語が複数回表示されてしまう、またその分いくつかの単語が表示されないという不具合が確認されています。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Version1.1.1で解消&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;テスト中に裏面で&amp;rdquo;暗記済み&amp;rdquo;ボタンをタップした際に&amp;rdquo;覚えてた&amp;rdquo;単語と&amp;rdquo;忘れてた&amp;rdquo;単語のカウントがずれる不具合が確認されています。&lt;/li&gt;
&lt;li&gt;戻るボタンが連発されてしまう不具合が確認されています。
詳細を確認次第、修正したいと思います。暫定的な回避策としてはアプリの再起動をお願いします。&lt;/li&gt;
&lt;li&gt;端末の言語設定を変更するとアプリの設定・挙動が一部おかしくなる不具合が確認されています。
暫定的な回避策としては設定をし直すことで元に戻ります。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Version1.1.2で解消&lt;br&gt;
端末のフォントサイズ設定によって画面の表示が崩れる不具合が確認されています。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>SimpleSwipeFlashcard - Flashcard app for Android</title>
      <link>https://daikikohara.github.io/work/simpleswipeflashcard_en/</link>
      <pubDate>Sun, 20 Sep 2015 12:17:30 -0700</pubDate>
      
      <guid>https://daikikohara.github.io/work/simpleswipeflashcard_en/</guid>
      <description>

&lt;p&gt;&lt;u&gt;&lt;a href=&#34;https://daikikohara.github.io/work/simpleswipeflashcard_ja/&#34;&gt;日本語の説明はこちら&lt;/a&gt;&lt;/u&gt;&lt;/p&gt;

&lt;p&gt;Menu&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#About:7af77ca426a371e668acd4bc69b47f95&#34;&gt;About&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#Announcement:7af77ca426a371e668acd4bc69b47f95&#34;&gt;Announcement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#Update:7af77ca426a371e668acd4bc69b47f95&#34;&gt;What&amp;rsquo;s New&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#How:7af77ca426a371e668acd4bc69b47f95&#34;&gt;How to use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#FAQ:7af77ca426a371e668acd4bc69b47f95&#34;&gt;FAQ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#BUG:7af77ca426a371e668acd4bc69b47f95&#34;&gt;Known Issues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;About:7af77ca426a371e668acd4bc69b47f95&#34;&gt;About&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=daikikohara.flashcard&#34;&gt;SimpleSwipeFlashcard&lt;/a&gt; is a flashcard app for Android.&lt;br&gt;
Click the link above to open GooglePlay for more detail.&lt;/p&gt;

&lt;h1 id=&#34;Announcement:7af77ca426a371e668acd4bc69b47f95&#34;&gt;Announcement&lt;/h1&gt;

&lt;p&gt;Currently no announcement.&lt;/p&gt;

&lt;h1 id=&#34;Update:7af77ca426a371e668acd4bc69b47f95&#34;&gt;What&amp;rsquo;s New&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Sep 21 2015 - Version1.0.0 released.&lt;/li&gt;
&lt;li&gt;Sep 21 2015 - Version1.0.1 released.&lt;br&gt;
Fixed problem with some devices which crashes the app when the flip button is being tapped.&lt;/li&gt;
&lt;li&gt;Sep 23 2015 - Version1.0.2 released.&lt;br&gt;
Fixed issue with the order of flashcard getting reshuffled when the device gets rotated at the shuffle test.&lt;/li&gt;
&lt;li&gt;Sep 25 2015 - Version1.1.0 released.&lt;br&gt;
You can now mark words as remembered during the test.&lt;/li&gt;
&lt;li&gt;Sep 26 2015 - Version1.1.1 released.&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;Fixed issue with Failed/Passed count getting wrong when marking as remembered on the back side of the card.&lt;/li&gt;
&lt;li&gt;Fixed issue with back button getting pressed repeatedly in a certain situation.&lt;/li&gt;
&lt;li&gt;Fixed issue with the app settings getting wrong when the device language setting gets changed.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Sep 29 2015 - Version1.1.2 released.&lt;br&gt;
Fixed issue with some layouts getting broken depending on the font size of the device.&lt;/li&gt;
&lt;li&gt;Sep 9 2015 - Version1.1.3 released.&lt;br&gt;

&lt;ul&gt;
&lt;li&gt;Added support for Android 6.0(Marshmallow).&lt;/li&gt;
&lt;li&gt;Word can be registered with multi-line text.&lt;/li&gt;
&lt;li&gt;Expanded Max length for each word to 1000.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;How:7af77ca426a371e668acd4bc69b47f95&#34;&gt;How to use&lt;/h1&gt;

&lt;h2 id=&#34;1-flashcard-list:7af77ca426a371e668acd4bc69b47f95&#34;&gt;1. Flashcard list&lt;/h2&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/en/main.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;Tap the red &amp;ldquo;+&amp;rdquo; button at the bottom right corner to add a flashcard.&lt;/li&gt;
&lt;li&gt;Tap the menu icon at the top right corner to open menu.&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/en/main_menu.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;Tap &amp;ldquo;Download Flashcard&amp;rdquo; to download flashcards we provide.(currently most of them are English to Japanese flashcards)&lt;/li&gt;
&lt;li&gt;Tap &amp;ldquo;Import from Google Drive&amp;rdquo; to import flashcards you exported before.&lt;/li&gt;
&lt;li&gt;Tap &amp;ldquo;Export all flashcards&amp;rdquo; to export all flashcards to Google Drive.&lt;/li&gt;
&lt;li&gt;Tap &amp;ldquo;Share&amp;rdquo; to share this app with your friends. Thank you!&lt;/li&gt;
&lt;li&gt;Tap &amp;ldquo;About &amp;amp; Help&amp;rdquo; to open Help.&lt;/li&gt;
&lt;li&gt;Tap &amp;ldquo;Settings&amp;rdquo; to open settings.&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/en/main_tap.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;Tap a flashcard to open the dialog to start test shown above.
You can configure the condition of the test.&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/en/main_longpress.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;Long press a flashcard to open the dialog for menu shown above.
You can select the menu to edit, delete or export the flashcard (to GoogleDrive).
If you export the flashcard, it will be stored as a spreadsheet file in &amp;ldquo;SimpleSwipeFlashcard&amp;rdquo; folder on GoogleDrive.
Since it will be stored as Spreadsheet file, you can modify the file on your other computers, and then import back to the app.&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/en/main_swipe.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;Swipe to run a specific action. The action can be configured in the settings.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;2-edit-flashcard:7af77ca426a371e668acd4bc69b47f95&#34;&gt;2. Edit flashcard&lt;/h2&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/en/edit.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;Tap the red &amp;ldquo;+&amp;rdquo; button at the bottom right corner to add a word/meaning pair.&lt;/li&gt;
&lt;li&gt;Tap the menu icon at the top right corner to open menu.&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/en/edit_menu.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;Tap &amp;ldquo;Edit Title&amp;rdquo; to edit the title of the flashcard.&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/en/edit_tap.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;Tap a word to open the menu shown above.
You can edit, delete or mark as remembered the word.&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/en/edit_swipe.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;Swipe to run a specific action. The action can be configured in the settings.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;3-test:7af77ca426a371e668acd4bc69b47f95&#34;&gt;3. Test&lt;/h2&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/en/test.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;Tap &amp;ldquo;READ OUT&amp;rdquo; to make your device read out the word.&lt;/li&gt;
&lt;li&gt;Tap &amp;ldquo;MARK&amp;rdquo; to mark the word as remembered.&lt;/li&gt;
&lt;li&gt;Tap &amp;ldquo;Flip&amp;rdquo; to see the back side(answer).
If you see the back side, the word will be marked as failed.&lt;/li&gt;
&lt;li&gt;Swipe left to go to the next card.
If you go to the next card without flipping to the back side, the word will be marked as passed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;4-test-result:7af77ca426a371e668acd4bc69b47f95&#34;&gt;4. Test Result&lt;/h2&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/en/result.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;Tap &amp;ldquo;Exit&amp;rdquo; to go back to flashcard list.&lt;/li&gt;
&lt;li&gt;Tap &amp;ldquo;Retry failed words&amp;rdquo; to test only with failed words.&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/en/result_fail.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;The list of the failed words are shown in this page&lt;/li&gt;
&lt;/ul&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/en/result_remember.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;ul&gt;
&lt;li&gt;The list of the marked-as-remembered words are shown in this page.
A word will be marked as remembered when

&lt;ul&gt;
&lt;li&gt;you pass a certain times of test.&lt;/li&gt;
&lt;li&gt;you tap the &amp;ldquo;MARK&amp;rdquo; button on the card during the test.(You can set the number of the times in the settings.)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The remembered words will not be shown in the test afterwards.&lt;/li&gt;
&lt;li&gt;Uncheck to not mark the word as remembered.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;5-settings:7af77ca426a371e668acd4bc69b47f95&#34;&gt;5. Settings&lt;/h2&gt;

&lt;img src=&#34;https://daikikohara.github.io/images/simpleswipeflashcard/en/settings.png&#34; alt=&#34;&#34; class=&#34;pure-img&#34; &gt;

&lt;p&gt;This page would be self explanatory enough.&lt;/p&gt;

&lt;h1 id=&#34;FAQ:7af77ca426a371e668acd4bc69b47f95&#34;&gt;FAQ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;b&gt;Q. &amp;lsquo;READ OUT&amp;rsquo; button does not work&lt;/b&gt;&lt;br&gt;
A. &amp;lsquo;READ OUT&amp;rsquo; uses Android&amp;rsquo;s built-in &amp;lsquo;Text-to-Speech&amp;rsquo; feature. Please make sure your device has this feature.
If it&amp;rsquo;s available and the button still doesn&amp;rsquo;t work, make sure the language you select is available on your device. You may need to download it on Android&amp;rsquo;s setting screen although the app tries to download the language if it&amp;rsquo;s not available.
Also check your device&amp;rsquo;s volume setting.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Q. I can not download flashcards&lt;/b&gt;&lt;br&gt;
A. Please make sure your device is online and the setting for &amp;lsquo;Send Feedback&amp;rsquo; is on in the app settings.(See help for more details about &amp;lsquo;Send Feedback&amp;rsquo;.)
The other possibility is it may be caused by network and/or server issue. In this case, please try again later.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Q. I can not import/export flashcards&lt;/b&gt;&lt;br&gt;
A. This may be also caused by network/server issue. In that case, please try again later. In addition, if you are trying to export/import huge size of flashcards, please reduce the size of the flashcards.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Q. I see more than 2 same name flashcard when I export the flashcard on Google Drive and see it in my browser.&lt;/b&gt;&lt;br&gt;
A. This is probably a cache issue. Reloading the page should solve the issue.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Q. I want to share my flashcards with my friends&lt;/b&gt;&lt;br&gt;
A. This is currently not possible in our app. However you can share the file from Google Drive.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Q. All flashcards are gone when I change my device.&lt;/b&gt;&lt;br&gt;
A. Currently only the settings in the app will be transferred. For flashcards, please export them in your old device and export them in the new one.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;b&gt;Q. I see similar meanings for a word in Japanese flashcards I downloaded&lt;/b&gt;&lt;br&gt;
A. For some flashcards, we just use a public domain dictionary to create the word/meaning pairs, so they look like word/meaning pairs in a dictionary.
For the others, We put both transitive and intransitive meanings in separate lines.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;BUG:7af77ca426a371e668acd4bc69b47f95&#34;&gt;Known Issues&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Flip animation is weird in Android 6.0(Marshmallow). We are working on it.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Android用の単語帳アプリをリリースしました</title>
      <link>https://daikikohara.github.io/blog/2015/09/20/release-of-simpleswipeflashcard/</link>
      <pubDate>Sun, 20 Sep 2015 11:37:37 -0700</pubDate>
      
      <guid>https://daikikohara.github.io/blog/2015/09/20/release-of-simpleswipeflashcard/</guid>
      <description>&lt;p&gt;日本のSI系の会社を辞めて今年の4月からシリコンバレーの学校に通っています(詳しい話はいずれ書くかもしれません)。
日本ではバックエンドメインだったんですが、折角なので新しいことをやろうと思い、授業ではWeb系とかAndroidとかの授業を中心に取ってみました。&lt;/p&gt;

&lt;p&gt;ということで、授業で作ったAndroid用の単語帳アプリをブラッシュアップしてリリースしました。
単語帳アプリは既に色々存在していますが(というかGooglePlay見てみたらびっくりするくらいレッドオーシャンでしたｗ)、自分が使いやすいものを作りたかったので再発明してしまいました。。。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=daikikohara.flashcard&#34;&gt;SimpleSwipeFlashcard(Google Play)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;特徴は、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;単語帳はダウンロードだけじゃなく自分でも作れる。&lt;/li&gt;
&lt;li&gt;スワイプベースでストレスなく操作できる。&lt;/li&gt;
&lt;li&gt;テストで間違えた単語は正解するまでリトライできる。&lt;/li&gt;
&lt;li&gt;一定数正解すると暗記済みになる。&lt;/li&gt;
&lt;li&gt;作った単語帳はGoogleスプレッドシートにエクスポートして編集できる。&lt;/li&gt;
&lt;li&gt;見た目や挙動を色々カスタマイズできる。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;って感じです。&lt;/p&gt;

&lt;p&gt;普段の生活で分からない単語はPCでスプレッドシートにメモってるんですけど、それをそのまま使えたらいいなぁと思って作ることにしました。
ダウンロード可能な単語帳は、今まで手元にメモってた単語帳等を編集してカテゴリ別に配信してたりします。今後も追加していく予定です。&lt;/p&gt;

&lt;p&gt;無料かつ広告もちょこっとなので良かったら使ってみてくださいm(_ _)m&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://daikikohara.github.io/about/</link>
      <pubDate>Sat, 19 Sep 2015 20:40:46 -0700</pubDate>
      
      <guid>https://daikikohara.github.io/about/</guid>
      <description>&lt;p&gt;This is a personal website by Daiki Kohara.&lt;br&gt;
Daiki Kohara is a software engineer living in San Jose CA USA, originally from Tokyo Japan.&lt;br&gt;
Most of the contents in this site are written in Japanese.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/daikikohara&#34;&gt;Github&lt;/a&gt; &lt;a href=&#34;https://twitter.com/daikikohara&#34;&gt;Twitter&lt;/a&gt; &lt;a href=&#34;https://facebook.com/daiki.kohara.5&#34;&gt;Facebook&lt;/a&gt; &lt;a href=&#34;https://www.linkedin.com/in/daikikohara&#34;&gt;Linkedin&lt;/a&gt; &lt;a href=&#34;https://play.google.com/store/apps/developer?id=daikikohara&#34;&gt;GooglePlay&lt;/a&gt; &lt;a href=&#34;https://independent.academia.edu/DaikiKohara&#34;&gt;Academia&lt;/a&gt; &lt;a href=&#34;http://qiita.com/kiida&#34;&gt;Qiita(Japanese)&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>